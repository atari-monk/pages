(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();class u{fullscreenButton;canvasResizer;renderer;constructor(e,t,i){this.fullscreenButton=e,this.canvasResizer=t,this.renderer=i,this.canvasResizer.resize(),this.renderer.start()}destroy(){this.renderer.stop(),this.fullscreenButton.destroy(),this.canvasResizer.destroy()}}class g{resizeObserver=null;resizeTimer=null;lastDimensions={width:0,height:0};canvas;constructor(e){this.canvas=e,this.canvas.style.width="100%",this.canvas.style.height="100%",this.setupEventListeners(),this.resize()}resize(){const e=this.canvas.getBoundingClientRect(),t=window.devicePixelRatio||1,i=Math.floor(e.width*t),s=Math.floor(e.height*t);(i!==this.lastDimensions.width||s!==this.lastDimensions.height)&&(this.canvas.width=i,this.canvas.height=s,this.lastDimensions={width:i,height:s},this.dispatchResizeEvent())}destroy(){this.resizeTimer&&(clearTimeout(this.resizeTimer),this.resizeTimer=null),this.resizeObserver&&(this.resizeObserver.disconnect(),this.resizeObserver=null)}setupEventListeners(){this.resizeObserver=new ResizeObserver(()=>{this.resizeTimer&&clearTimeout(this.resizeTimer),this.resizeTimer=window.setTimeout(()=>{this.resize(),this.resizeTimer=null},100)}),this.resizeObserver.observe(this.canvas)}dispatchResizeEvent(){const e=new CustomEvent("canvas-resized",{detail:{width:this.canvas.width,height:this.canvas.height,pixelRatio:window.devicePixelRatio||1}});this.canvas.dispatchEvent(e)}}class m{canvas;engineHook;options;timeCalculator;rafId=0;isRunning=!1;ctx;constructor(e,t,i,s){this.canvas=e,this.engineHook=t,this.options=i,this.timeCalculator=s;const n=this.canvas.getContext("2d");if(!n)throw new Error("Failed to get 2D rendering context. Canvas may be unsupported.");this.ctx=n}start(){this.isRunning||(console.log("start"),this.isRunning=!0,this.timeCalculator.reset(),this.rafId=requestAnimationFrame(this.frameTick.bind(this)))}stop(){this.isRunning&&(this.isRunning=!1,cancelAnimationFrame(this.rafId))}frameTick(e){const{deltaTime:t,totalTime:i}=this.timeCalculator.calculate(e),s={ctx:this.ctx,width:this.canvas.width,height:this.canvas.height,deltaTime:t,totalTime:i};this.ctx.clearRect(0,0,s.width,s.height),this.engineHook.frameTick(s),this.options.isAnimLoop&&this.isRunning&&(this.rafId=requestAnimationFrame(this.frameTick.bind(this)))}}class f{lastTime=0;totalTime=0;calculate(e){this.lastTime===0&&(this.lastTime=e);const t=(e-this.lastTime)/1e3;return this.lastTime=e,this.totalTime+=t,{deltaTime:t,totalTime:this.totalTime,lastTime:this.lastTime}}reset(){this.lastTime=0,this.totalTime=0}}class p{container;button;isTouchDevice;fullscreenChangeHandler;buttonClickHandler;constructor(e){this.container=e,this.isTouchDevice=this.isTouchDeviceCheck(),this.button=this.createFullscreenButton(),this.fullscreenChangeHandler=this.updateButtonVisibility.bind(this),this.buttonClickHandler=this.handleFullscreenToggle.bind(this),this.setupEventListeners(),this.updateButtonVisibility()}destroy(){document.removeEventListener("fullscreenchange",this.fullscreenChangeHandler),this.button.removeEventListener("click",this.buttonClickHandler),this.button.remove()}createFullscreenButton(){const e=document.createElement("button");return e.className="fullscreen-button",e.textContent="Enter Fullscreen",this.container.appendChild(e),e}async handleFullscreenToggle(){try{document.fullscreenElement?await document.exitFullscreen():await this.container.requestFullscreen()}catch(e){console.warn("Fullscreen error:",e)}}setupEventListeners(){document.addEventListener("fullscreenchange",this.fullscreenChangeHandler),this.button.addEventListener("click",this.buttonClickHandler)}updateButtonVisibility(){const e=document.fullscreenElement!==null;this.button.textContent=e?"Exit Fullscreen":"Enter Fullscreen",this.button.classList.toggle("visible",this.isTouchDevice&&!e)}isTouchDeviceCheck(){return typeof window>"u"?!1:"ontouchstart"in window||navigator.maxTouchPoints>0||window.matchMedia("(pointer: coarse)").matches}}function y(a,e,t,i={}){const{container:s,canvas:n}=v(a,e);return w(s,S(n,C(i),t))}function v(a,e){const t=document.getElementById(a),i=document.getElementById(e);if(!t)throw new Error(`Container with ID ${a} not found`);if(!i)throw new Error(`Canvas with ID ${e} not found`);if(!(i instanceof HTMLCanvasElement))throw new Error(`Element with ID ${e} is not a canvas`);return{container:t,canvas:i}}function w(a,e){return new u(new p(a),e.canvasResizer,e.renderer)}function C(a){return{isAnimLoop:!0,...a}}function S(a,e,t){return{canvasResizer:new g(a),renderer:new m(a,t,e,new f)}}class x{#e;#t=new Map;#i=new Set;registerScene(e,t){this.#t.set(e,t),t.init?.()}transitionToScene(e){const t=this.#t.get(e);return t?(this.#e?.onExit?.(),this.#e=t,this.#e.name=e,this.#e.onEnter?.(),this.#s(),!0):(console.error(`Scene ${e} not found`),!1)}#s(){this.#i.forEach(e=>e())}get availableScenes(){return Array.from(this.#t.keys()).map(e=>({name:e,displayName:this.#t.get(e)?.displayName||e}))}get activeScene(){return this.#e?.name}get currentScene(){return this.#e}onSceneChange(e){return this.#i.add(e),()=>this.#i.delete(e)}}class b{inputSystem;sceneSystem;debugMode=!0;constructor(e,t){this.inputSystem=e,this.sceneSystem=t}handleDebugToggle(){this.debugMode=!this.debugMode,console.log(`Debug mode: ${this.debugMode?"ON":"OFF"}`)}frameTick=e=>{this.inputSystem.update(),this.sceneSystem.currentScene?.update?.(e),this.sceneSystem.currentScene?.render?.(e)};get availableScenes(){return this.sceneSystem.availableScenes}get activeScene(){return this.sceneSystem.activeScene}get input(){return this.inputSystem}onSceneChange(e){return this.sceneSystem.onSceneChange(e)}transitionToScene(e){return this.sceneSystem.transitionToScene(e)}registerScene(e,t){this.sceneSystem.registerScene(e,t)}}class E{gamepads=[];boundHandleGamepadConnected;boundHandleGamepadDisconnected;constructor(){this.boundHandleGamepadConnected=this.handleGamepadConnected.bind(this),this.boundHandleGamepadDisconnected=this.handleGamepadDisconnected.bind(this),this.setupEventListeners(),this.update()}getGamepad(e=0){return e<0||e>=this.gamepads.length?null:this.gamepads[e]}getConnectedGamepads(){return Array.from(navigator.getGamepads()).filter(e=>e!==null)}update(){this.gamepads=navigator.getGamepads()}destroy(){this.removeEventListeners(),this.gamepads=[]}setupEventListeners(){window.addEventListener("gamepadconnected",this.boundHandleGamepadConnected),window.addEventListener("gamepaddisconnected",this.boundHandleGamepadDisconnected)}removeEventListeners(){window.removeEventListener("gamepadconnected",this.boundHandleGamepadConnected),window.removeEventListener("gamepaddisconnected",this.boundHandleGamepadDisconnected)}handleGamepadConnected(e){console.log(`Gamepad connected: ${e.gamepad.id}`),this.update()}handleGamepadDisconnected(e){console.log(`Gamepad disconnected: ${e.gamepad.id}`),this.update()}}class k{gamepadConnectionTracker;previousStates;deadZones;buttonMap;axisMap;constructor(){this.gamepadConnectionTracker=new E,this.previousStates=[],this.deadZones={},this.buttonMap={A:0,B:1,X:2,Y:3,LB:4,RB:5,LT:6,RT:7,Back:8,Start:9,LStick:10,RStick:11,DUp:12,DDown:13,DLeft:14,DRight:15},this.axisMap={LeftStickX:0,LeftStickY:1,RightStickX:2,RightStickY:3},this.setDeadZone(0,.2),this.setDeadZone(1,.2),this.setDeadZone(2,.2),this.setDeadZone(3,.2)}update(){this.previousStates=[...this.gamepadConnectionTracker.getConnectedGamepads()],this.gamepadConnectionTracker.update()}isButtonDown(e,t){const i=typeof t=="string"?this.buttonMap[t]:t;return this.gamepadConnectionTracker.getGamepad(e)?.buttons[i]?.pressed||!1}isButtonPressed(e,t){const i=typeof t=="string"?this.buttonMap[t]:t,s=this.gamepadConnectionTracker.getGamepad(e),n=this.previousStates[e];return s?.buttons[i]?.pressed&&!n?.buttons[i]?.pressed||!1}isButtonReleased(e,t){const i=typeof t=="string"?this.buttonMap[t]:t,s=this.gamepadConnectionTracker.getGamepad(e),n=this.previousStates[e];return!s?.buttons[i]?.pressed&&n?.buttons[i]?.pressed||!1}getAxis(e,t){const i=typeof t=="string"?this.axisMap[t]:t,n=this.gamepadConnectionTracker.getGamepad(e)?.axes[i]||0,r=this.deadZones[i]||0;return Math.abs(n)<r?0:n}setButtonMapping(e,t){this.buttonMap[e]=t}setAxisMapping(e,t){this.axisMap[e]=t}setDeadZone(e,t){this.deadZones[e]=t}vibrate(e,t,i,s){const n=this.gamepadConnectionTracker.getGamepad(e);return n?.vibrationActuator?(n.vibrationActuator.playEffect("dual-rumble",{startDelay:0,duration:t,weakMagnitude:i,strongMagnitude:s}),!0):!1}}class R{keys;boundKeyDown;boundKeyUp;constructor(){this.keys={},this.boundKeyDown=this.#t.bind(this),this.boundKeyUp=this.#i.bind(this),this.#e()}isKeyDown(e){return this.keys[e]||!1}destroy(){window.removeEventListener("keydown",this.boundKeyDown),window.removeEventListener("keyup",this.boundKeyUp)}#e(){window.addEventListener("keydown",this.boundKeyDown),window.addEventListener("keyup",this.boundKeyUp)}#t(e){this.keys[e.key]=!0,["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"," "].includes(e.key)&&e.preventDefault()}#i(e){this.keys[e.key]=!1}}class T{x;y;buttons;wheel;constructor(){this.x=0,this.y=0,this.buttons={},this.wheel=0}setupCanvasEvents(e){const t={passive:!1};e.addEventListener("mousemove",i=>{const s=e.getBoundingClientRect();this.x=i.clientX-s.left,this.y=i.clientY-s.top},t),e.addEventListener("mousedown",i=>{this.buttons[i.button]=!0},t),e.addEventListener("mouseup",i=>{this.buttons[i.button]=!1},t),e.addEventListener("wheel",i=>{this.wheel=i.deltaY,i.preventDefault()},{passive:!1})}update(){this.wheel=0}isButtonDown(e){return this.buttons[e]||!1}getPosition(){return{x:this.x,y:this.y}}getWheel(){return this.wheel}}class B{touches;constructor(){this.touches=new Map}setupCanvasEvents(e){const t={passive:!1,capture:!1};e.addEventListener("touchstart",i=>{this.#e(i,e),i.preventDefault()},t),e.addEventListener("touchmove",i=>{this.#e(i,e),i.preventDefault()},t),e.addEventListener("touchend",i=>{for(const s of Array.from(i.changedTouches))this.touches.delete(s.identifier);i.preventDefault()},t)}#e(e,t){for(const i of Array.from(e.changedTouches)){const s=t.getBoundingClientRect();this.touches.set(i.identifier,{x:i.clientX-s.left,y:i.clientY-s.top})}}getCount(){return this.touches.size}getPositions(){return Array.from(this.touches.values())}getPosition(e){return this.touches.get(e)||null}}class M{keyboard;mouse;gamepads;touches;constructor(){this.keyboard=new R,this.mouse=new T,this.gamepads=new k,this.touches=new B}setupCanvasEvents(e){this.mouse.setupCanvasEvents(e),this.touches.setupCanvasEvents(e)}update(){this.gamepads.update(),this.mouse.update()}}class z{gameEngine;constructor(){this.gameEngine=new b(new M,new x)}getGameEngine(){return this.gameEngine}}class L{constructor(e,t){this.width=e,this.height=t}config={count:10,minRadius:15,maxRadius:50,speed:30,gravity:9.8,bounce:.7};state={circles:[],lastFrameTime:0};name="Animated Circles";displayName="Animated Circles";init(){console.log("Initializing Animated Circles Scene")}onEnter(){this.generateCircles(),this.state.lastFrameTime=performance.now()}onExit(){}update(e){this.updatePhysics(e)}render(e){this.renderBackground(e),this.state.circles.forEach(t=>this.renderCircle(e,t))}resize(){this.generateCircles()}generateCircles(){this.state.circles=Array.from({length:this.config.count},()=>{const e=this.config.minRadius+Math.random()*(this.config.maxRadius-this.config.minRadius);return{x:Math.random()*(this.width-e*2)+e,y:Math.random()*(this.height/2),radius:e,color:`hsl(${Math.random()*360}, 70%, 50%)`,vx:(Math.random()-.5)*this.config.speed,vy:(Math.random()-.5)*this.config.speed}})}updatePhysics(e){const{deltaTime:t,width:i,height:s}=e;this.state.circles.forEach(n=>{n.vy+=this.config.gravity*t,n.x+=n.vx*t,n.y+=n.vy*t,n.x-n.radius<0?(n.x=n.radius,n.vx*=-this.config.bounce):n.x+n.radius>i&&(n.x=i-n.radius,n.vx*=-this.config.bounce),n.y-n.radius<0?(n.y=n.radius,n.vy*=-this.config.bounce):n.y+n.radius>s&&(n.y=s-n.radius,n.vy*=-this.config.bounce,n.vx*=.99)})}renderBackground(e){const{ctx:t,height:i,width:s}=e,n=t.createLinearGradient(0,0,0,i);n.addColorStop(0,"#1A2980"),n.addColorStop(1,"#26D0CE"),t.fillStyle=n,t.fillRect(0,0,s,i)}renderCircle(e,t){const{ctx:i}=e;i.save(),i.shadowColor="rgba(0,0,0,0.5)",i.shadowBlur=10,i.shadowOffsetY=3,i.beginPath(),i.arc(t.x,t.y,t.radius,0,Math.PI*2),i.fillStyle=t.color,i.fill(),i.beginPath(),i.arc(t.x-t.radius/4,t.y-t.radius/4,t.radius/3,0,Math.PI*2),i.fillStyle="rgba(255,255,255,0.2)",i.fill(),i.restore()}}class D{constructor(e,t){this.width=e,this.height=t}config={speed:200,radius:20};state={x:50,y:50,dx:1,dy:1,color:"blue"};name="Bouncing Ball";displayName="Bouncing Ball";init(){console.log("Initializing Bouncing Ball Scene")}onEnter(){this.state={x:this.width/2,y:this.height/2,dx:1,dy:1,color:"blue"}}onExit(){}update(e){const{deltaTime:t,width:i,height:s}=e;this.state.x+=this.state.dx*this.config.speed*t,this.state.y+=this.state.dy*this.config.speed*t,this.state.x+this.config.radius>i?(this.state.x=i-this.config.radius,this.state.dx*=-1,this.state.color=this.getRandomColor()):this.state.x-this.config.radius<0&&(this.state.x=this.config.radius,this.state.dx*=-1,this.state.color=this.getRandomColor()),this.state.y+this.config.radius>s?(this.state.y=s-this.config.radius,this.state.dy*=-1,this.state.color=this.getRandomColor()):this.state.y-this.config.radius<0&&(this.state.y=this.config.radius,this.state.dy*=-1,this.state.color=this.getRandomColor())}render(e){this.renderBackground(e),this.renderBall(e)}resize(){this.state.x=Math.min(this.state.x,this.width-this.config.radius),this.state.y=Math.min(this.state.y,this.height-this.config.radius)}getRandomColor(){return`hsl(${Math.random()*360}, 70%, 50%)`}renderBackground(e){const{ctx:t,height:i,width:s}=e;t.fillStyle="#222",t.fillRect(0,0,s,i)}renderBall(e){const{ctx:t}=e;t.beginPath(),t.arc(this.state.x,this.state.y,this.config.radius,0,Math.PI*2),t.fillStyle=this.state.color,t.fill()}}class P{config={lineColor:"green",lineWidth:3};name="Cross Lines";displayName="Cross Lines";init(){console.log("Initializing Cross Lines Scene")}onEnter(){}onExit(){}update(e){}render(e){this.renderBackground(e),this.renderLines(e)}resize(){}renderBackground(e){const{ctx:t,height:i,width:s}=e;t.fillStyle="#222",t.fillRect(0,0,s,i)}renderLines(e){const{ctx:t,height:i,width:s}=e;t.strokeStyle=this.config.lineColor,t.lineWidth=this.config.lineWidth,t.beginPath(),t.moveTo(0,i/2),t.lineTo(s,i/2),t.moveTo(s/2,0),t.lineTo(s/2,i),t.stroke()}}class F{config={lineColor:"red",lineWidth:3};name="Diagonal Lines";displayName="Diagonal Lines";init(){console.log("Initializing Diagonal Lines Scene")}onEnter(){}onExit(){}update(e){}render(e){this.renderBackground(e),this.renderLines(e)}resize(){}renderBackground(e){const{ctx:t,height:i,width:s}=e;t.fillStyle="#222",t.fillRect(0,0,s,i)}renderLines(e){const{ctx:t,height:i,width:s}=e;t.strokeStyle=this.config.lineColor,t.lineWidth=this.config.lineWidth,t.beginPath(),t.moveTo(0,0),t.lineTo(s,i),t.moveTo(s,0),t.lineTo(0,i),t.stroke()}}class A{constructor(e,t){this.width=e,this.height=t}config={speedX:150,radius:20,gravity:500,bounceFactor:.7,minSpeed:5};state={x:50,y:50,speedX:this.config.speedX,speedY:0,color:"blue"};name="Gravity Ball";displayName="Gravity Ball";getRandomColor(){return`hsl(${Math.random()*360}, 70%, 50%)`}renderBackground(e){const{ctx:t,height:i,width:s}=e;t.fillStyle="#222",t.fillRect(0,0,s,i)}renderBall(e){const{ctx:t}=e;t.beginPath(),t.arc(this.state.x,this.state.y,this.config.radius,0,Math.PI*2),t.fillStyle=this.state.color,t.fill()}init(){console.log("Initializing Gravity Ball Scene")}onEnter(){this.state={x:this.width/2,y:this.height/4,speedX:this.config.speedX,speedY:0,color:"blue"}}onExit(){}update(e){const{deltaTime:t,width:i,height:s}=e;this.state.speedY+=this.config.gravity*t,this.state.x+=this.state.speedX*t,this.state.y+=this.state.speedY*t,(this.state.x+this.config.radius>i||this.state.x-this.config.radius<0)&&(this.state.speedX*=-this.config.bounceFactor,this.state.x=Math.max(this.config.radius,Math.min(i-this.config.radius,this.state.x)),this.state.color=this.getRandomColor()),this.state.y+this.config.radius>s&&(this.state.speedY*=-this.config.bounceFactor,this.state.y=s-this.config.radius,Math.abs(this.state.speedX)<this.config.minSpeed&&(this.state.speedX=0),Math.abs(this.state.speedY)<this.config.minSpeed&&(this.state.speedY=0),this.state.color=this.getRandomColor())}render(e){this.renderBackground(e),this.renderBall(e)}resize(){this.state.x=Math.min(this.state.x,this.width-this.config.radius),this.state.y=Math.min(this.state.y,this.height-this.config.radius)}}class G{constructor(e,t,i){this.canvas=e,this.width=t,this.height=i}config={maxParticles:500,spawnRate:5,baseSize:5,sizeVariation:15,baseSpeed:50,colorThemes:[["#FF5252","#FF4081","#E040FB","#7C4DFF","#536DFE"],["#4CAF50","#8BC34A","#CDDC39","#FFEB3B","#FFC107"],["#00BCD4","#03A9F4","#2196F3","#3F51B5","#673AB7"]],mouseRepelRadius:100,background:"#121212"};state={particles:[],currentTheme:0,mouse:{x:-100,y:-100}};name="Particle System";displayName="Particle System";init(){console.log("Initializing Particle System Scene")}onEnter(){for(;this.state.particles.length<this.config.maxParticles/2;)this.state.particles.push(this.createParticle());this.canvas.addEventListener("mousemove",this.handleMouseMove),this.canvas.addEventListener("click",this.handleClick)}onExit(){this.canvas.removeEventListener("mousemove",this.handleMouseMove),this.canvas.removeEventListener("click",this.handleClick)}update(e){const{deltaTime:t,width:i,height:s}=e;for(let n=0;n<this.config.spawnRate;n++)this.state.particles.length<this.config.maxParticles&&this.state.particles.push(this.createParticle(this.state.mouse.x,this.state.mouse.y));this.state.particles.forEach((n,r,d)=>{if(n.x+=n.vx*t,n.y+=n.vy*t,n.life-=n.decay,n.life<=0||n.x<-n.size||n.x>i+n.size||n.y<-n.size||n.y>s+n.size){d.splice(r,1);return}const h=n.x-this.state.mouse.x,c=n.y-this.state.mouse.y,o=Math.sqrt(h*h+c*c);if(o<this.config.mouseRepelRadius){const l=this.config.mouseRepelRadius/o;n.vx+=h/o*l*t,n.vy+=c/o*l*t}})}render(e){this.renderBackground(e),this.renderParticles(e),this.renderUI(e)}resize(){this.state.particles.forEach(e=>{e.x=Math.max(e.size,Math.min(this.width-e.size,e.x)),e.y=Math.max(e.size,Math.min(this.height-e.size,e.y))})}createParticle(e,t){const i=this.config.colorThemes[this.state.currentTheme];return{x:e??Math.random()*this.width,y:t??Math.random()*this.height,size:this.config.baseSize+Math.random()*this.config.sizeVariation,color:i[Math.floor(Math.random()*i.length)],vx:(Math.random()-.5)*this.config.baseSpeed,vy:(Math.random()-.5)*this.config.baseSpeed,life:1,decay:.001+Math.random()*.005}}handleMouseMove=e=>{const t=this.canvas.getBoundingClientRect(),i=this.canvas.width/t.width,s=this.canvas.height/t.height;this.state.mouse.x=(e.clientX-t.left)*i,this.state.mouse.y=(e.clientY-t.top)*s};handleClick=()=>{this.state.currentTheme=(this.state.currentTheme+1)%this.config.colorThemes.length};renderBackground(e){const{ctx:t,height:i,width:s}=e;t.fillStyle=this.config.background,t.fillRect(0,0,s,i)}renderParticles(e){const{ctx:t}=e;this.state.particles.forEach(i=>{if(t.globalAlpha=i.life,t.beginPath(),t.arc(i.x,i.y,i.size*i.life,0,Math.PI*2),t.fillStyle=i.color,t.fill(),i.life>.7){t.beginPath(),t.arc(i.x,i.y,i.size*1.5*i.life,0,Math.PI*2);const s=t.createRadialGradient(i.x,i.y,0,i.x,i.y,i.size*1.5*i.life);s.addColorStop(0,i.color),s.addColorStop(1,"rgba(0,0,0,0)"),t.fillStyle=s,t.fill()}}),t.globalAlpha=1}renderUI(e){const{ctx:t}=e;t.fillStyle="white",t.font="16px Arial",t.textAlign="left",t.fillText(`Particles: ${this.state.particles.length}`,20,30),t.fillText("Click to change color theme",20,60)}}class I{config={minSize:10,maxSize:100,growthRate:.05,colorChangeSpeed:50,debugInfo:!0};state={size:this.config.minSize,growing:!0,color:"purple"};name="Pulsing Circle";displayName="Pulsing Circle";init(){console.log("Initializing Pulsing Circle Scene")}onEnter(){this.resetState()}onExit(){}update(e){this.updateSize(e),this.updateColor()}render(e){this.renderBackground(e),this.renderCircle(e),this.config.debugInfo&&this.renderDebugInfo(e)}resize(){}resetState(){this.state={size:this.config.minSize,growing:!0,color:"purple"}}updateSize(e){const t=this.state.growing?1:-1;this.state.size+=t*this.config.growthRate*e.deltaTime*60,this.state.size>this.config.maxSize&&(this.state.growing=!1),this.state.size<this.config.minSize&&(this.state.growing=!0)}updateColor(){const e=Date.now()/this.config.colorChangeSpeed%360;this.state.color=`hsl(${e}, 100%, 50%)`}renderBackground(e){const{ctx:t,height:i,width:s}=e;t.fillStyle="#222",t.fillRect(0,0,s,i)}renderCircle(e){const{ctx:t,height:i,width:s}=e;t.beginPath(),t.arc(s/2,i/2,this.state.size,0,Math.PI*2),t.fillStyle=this.state.color,t.fill()}renderDebugInfo(e){const{ctx:t,height:i,width:s}=e;t.fillStyle="white",t.font="16px Arial",t.textAlign="center",t.fillText(`Size: ${this.state.size.toFixed(1)}`,s/2,i/2)}}class H{constructor(e,t){this.width=e,this.height=t}config={count:15,minRadius:10,maxRadius:40,colors:["#FF5252","#4CAF50","#2196F3","#FFC107","#9C27B0"],strokeWidth:2,strokeColor:"#333",background:"#222"};state={circles:[]};name="Random Circles";displayName="Random Circles";init(){console.log("Initializing Random Circles Scene")}onEnter(){this.generateCircles()}onExit(){}update(e){}render(e){this.renderBackground(e),this.state.circles.forEach(t=>this.renderCircle(e,t))}resize(){this.generateCircles()}generateCircles(){this.state.circles=Array.from({length:this.config.count},()=>({x:Math.random()*this.width,y:Math.random()*this.height,radius:this.config.minRadius+Math.random()*(this.config.maxRadius-this.config.minRadius),color:this.config.colors[Math.floor(Math.random()*this.config.colors.length)]}))}renderBackground(e){const{ctx:t,height:i,width:s}=e;t.fillStyle=this.config.background,t.fillRect(0,0,s,i)}renderCircle(e,t){const{ctx:i}=e;i.beginPath(),i.arc(t.x,t.y,t.radius,0,Math.PI*2),i.fillStyle=t.color,i.fill(),i.lineWidth=this.config.strokeWidth,i.strokeStyle=this.config.strokeColor,i.stroke()}}class O{constructor(e,t,i){this.canvas=e,this.width=t,this.height=i}config={mainBallRadius:30,mainBallColor:"red",clickCircleMinRadius:10,clickCircleMaxRadius:40,clickCircleDecayRate:.98,removalThreshold:2,mainBallSpeed:100,background:"#222"};state={x:0,y:0,circles:[]};name="Red Ball";init(){console.log("Initializing Red Ball Scene")}onEnter(){this.state.x=this.width/2,this.state.y=this.height/2,this.state.circles=[],this.canvas.addEventListener("click",this.handleClick.bind(this))}onExit(){this.canvas.removeEventListener("click",this.handleClick.bind(this))}update(e){const{deltaTime:t,width:i}=e;this.state.x+=this.config.mainBallSpeed*t,this.state.x>i&&(this.state.x=0),this.state.circles.forEach(s=>{s.radius*=this.config.clickCircleDecayRate}),this.state.circles=this.state.circles.filter(s=>s.radius>this.config.removalThreshold)}render(e){this.renderBackground(e),this.renderClickCircles(e),this.renderMainBall(e)}resize(){this.state.x=Math.min(this.state.x,this.width),this.state.y=Math.min(this.state.y,this.height)}handleClick(e){const t=this.canvas.getBoundingClientRect();this.state.circles.push({x:e.clientX-t.left,y:e.clientY-t.top,radius:this.config.clickCircleMinRadius+Math.random()*(this.config.clickCircleMaxRadius-this.config.clickCircleMinRadius),color:`hsl(${Math.random()*360}, 70%, 50%)`})}renderBackground(e){const{ctx:t,height:i,width:s}=e;t.fillStyle=this.config.background,t.fillRect(0,0,s,i)}renderMainBall(e){const{ctx:t}=e;t.fillStyle=this.config.mainBallColor,t.beginPath(),t.arc(this.state.x,this.state.y,this.config.mainBallRadius,0,Math.PI*2),t.fill()}renderClickCircles(e){const{ctx:t}=e;this.state.circles.forEach(i=>{t.fillStyle=i.color,t.beginPath(),t.arc(i.x,i.y,i.radius,0,Math.PI*2),t.fill()})}}function X(a){const e=document.getElementById(a);if(!e)throw new Error(`Canvas element with ID '${a}' not found`);if(!(e instanceof HTMLCanvasElement))throw new Error(`Element with ID '${a}' is not a canvas element`);return{canvas:e,width:e.width,height:e.height}}window.addEventListener("load",async()=>{const a=Y();y("canvas-container","game-canvas",a);const{canvas:e,width:t,height:i}=X("game-canvas");N(a,e,t,i),$(a)});function Y(){return new z().getGameEngine()}function N(a,e,t,i){a.registerScene("Animated Circles",new L(t,i)),a.registerScene("Bouncing Ball",new D(t,i)),a.registerScene("Cross Lines",new P),a.registerScene("Diagonal Lines",new F),a.registerScene("Gravity Ball",new A(t,i)),a.registerScene("Particle System",new G(e,t,i)),a.registerScene("Pulsing Circle",new I),a.registerScene("Random Circles",new H(t,i)),a.registerScene("Red Ball",new O(e,t,i))}function $(a){const e=[{name:"Animated Circles",duration:15},{name:"Bouncing Ball",duration:10},{name:"Cross Lines",duration:3},{name:"Diagonal Lines",duration:3},{name:"Gravity Ball",duration:8},{name:"Particle System",duration:15},{name:"Pulsing Circle",duration:20},{name:"Random Circles",duration:5},{name:"Red Ball",duration:5}];let t=0;const i=()=>{const s=e[t];a.transitionToScene(s.name),setTimeout(()=>{t=(t+1)%e.length,i()},s.duration*1e3)};i()}
