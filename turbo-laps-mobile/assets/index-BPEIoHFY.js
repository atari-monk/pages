(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function e(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(i){if(i.ep)return;i.ep=!0;const n=e(i);fetch(i.href,n)}})();class O{fullscreenButton;canvasResizer;renderer;constructor(t,e,s){this.fullscreenButton=t,this.canvasResizer=e,this.renderer=s,this.canvasResizer.resize(),this.renderer.start()}destroy(){this.renderer.stop(),this.fullscreenButton.destroy(),this.canvasResizer.destroy()}}class I{resizeObserver=null;resizeTimer=null;lastDimensions={width:0,height:0};canvas;constructor(t){this.canvas=t,this.canvas.style.width="100%",this.canvas.style.height="100%",this.setupEventListeners(),this.resize()}resize(){const t=this.canvas.getBoundingClientRect(),e=window.devicePixelRatio||1,s=Math.floor(t.width*e),i=Math.floor(t.height*e);(s!==this.lastDimensions.width||i!==this.lastDimensions.height)&&(this.canvas.width=s,this.canvas.height=i,this.lastDimensions={width:s,height:i},this.dispatchResizeEvent())}destroy(){this.resizeTimer&&(clearTimeout(this.resizeTimer),this.resizeTimer=null),this.resizeObserver&&(this.resizeObserver.disconnect(),this.resizeObserver=null)}setupEventListeners(){this.resizeObserver=new ResizeObserver(()=>{this.resizeTimer&&clearTimeout(this.resizeTimer),this.resizeTimer=window.setTimeout(()=>{this.resize(),this.resizeTimer=null},100)}),this.resizeObserver.observe(this.canvas)}dispatchResizeEvent(){const t=new CustomEvent("canvas-resized",{detail:{width:this.canvas.width,height:this.canvas.height,pixelRatio:window.devicePixelRatio||1}});this.canvas.dispatchEvent(t)}}class D{canvas;engineHook;options;timeCalculator;rafId=0;isRunning=!1;ctx;constructor(t,e,s,i){this.canvas=t,this.engineHook=e,this.options=s,this.timeCalculator=i;const n=this.canvas.getContext("2d");if(!n)throw new Error("Failed to get 2D rendering context. Canvas may be unsupported.");this.ctx=n}start(){this.isRunning||(this.isRunning=!0,this.timeCalculator.reset(),this.rafId=requestAnimationFrame(this.frameTick.bind(this)))}stop(){this.isRunning&&(this.isRunning=!1,cancelAnimationFrame(this.rafId))}frameTick(t){const{deltaTime:e,totalTime:s}=this.timeCalculator.calculate(t),i={ctx:this.ctx,width:this.canvas.width,height:this.canvas.height,deltaTime:e,totalTime:s};this.ctx.clearRect(0,0,i.width,i.height),this.engineHook.frameTick(i),this.options.isAnimLoop&&this.isRunning&&(this.rafId=requestAnimationFrame(this.frameTick.bind(this)))}}class G{lastTime=0;totalTime=0;calculate(t){this.lastTime===0&&(this.lastTime=t);const e=(t-this.lastTime)/1e3;return this.lastTime=t,this.totalTime+=e,{deltaTime:e,totalTime:this.totalTime,lastTime:this.lastTime}}reset(){this.lastTime=0,this.totalTime=0}}class Y{container;button;isTouchDevice;fullscreenChangeHandler;buttonClickHandler;constructor(t){this.container=t,this.isTouchDevice=this.isTouchDeviceCheck(),this.button=this.createFullscreenButton(),this.fullscreenChangeHandler=this.updateButtonVisibility.bind(this),this.buttonClickHandler=this.handleFullscreenToggle.bind(this),this.setupEventListeners(),this.updateButtonVisibility()}destroy(){document.removeEventListener("fullscreenchange",this.fullscreenChangeHandler),this.button.removeEventListener("click",this.buttonClickHandler),this.button.remove()}createFullscreenButton(){const t=document.createElement("button");return t.className="fullscreen-button",t.textContent="Enter Fullscreen",this.container.appendChild(t),t}async handleFullscreenToggle(){try{document.fullscreenElement?await document.exitFullscreen():await this.container.requestFullscreen()}catch(t){console.warn("Fullscreen error:",t)}}setupEventListeners(){document.addEventListener("fullscreenchange",this.fullscreenChangeHandler),this.button.addEventListener("click",this.buttonClickHandler)}updateButtonVisibility(){const t=document.fullscreenElement!==null;this.button.textContent=t?"Exit Fullscreen":"Enter Fullscreen",this.button.classList.toggle("visible",this.isTouchDevice&&!t)}isTouchDeviceCheck(){return typeof window>"u"?!1:"ontouchstart"in window||navigator.maxTouchPoints>0||window.matchMedia("(pointer: coarse)").matches}}function X(r,t,e,s={}){const{container:i,canvas:n}=H(r,t);return F(i,$(n,z(s),e))}function H(r,t){const e=document.getElementById(r),s=document.getElementById(t);if(!e)throw new Error(`Container with ID ${r} not found`);if(!s)throw new Error(`Canvas with ID ${t} not found`);if(!(s instanceof HTMLCanvasElement))throw new Error(`Element with ID ${t} is not a canvas`);return{container:e,canvas:s}}function F(r,t){return new O(new Y(r),t.canvasResizer,t.renderer)}function z(r){return{isAnimLoop:!0,...r}}function $(r,t,e){return{canvasResizer:new I(r),renderer:new D(r,e,t,new G)}}class K{constructor(t){this.stateContext=t}update(t){this.savePreviousState(),this.normalizeRotation(),this.applyMovement(t)}savePreviousState(){this.stateContext.updateLastVelocity(this.stateContext.velocity),this.stateContext.updateLastRotation(this.stateContext.rotation)}normalizeRotation(){this.stateContext.updateRotation((this.stateContext.rotation%360+360)%360)}applyMovement(t){if(this.stateContext.velocity===0)return;const e=this.stateContext.rotation*Math.PI/180,s=this.stateContext.position.x+Math.sin(e)*this.stateContext.velocity*t,i=this.stateContext.position.y+-Math.cos(e)*this.stateContext.velocity*t;this.stateContext.updatePosition({x:s,y:i})}}class W{constructor(t,e,s){this.audioService=t,this.stateContext=e,this.soundConfig=s}handleEngine(t,e){const i=t!==0&&this.stateContext.inputEnabled;if(i&&!this.stateContext.isEnginePlaying?this.playEngine():!i&&this.stateContext.isEnginePlaying&&this.stopEngine(),this.stateContext.isEnginePlaying){const n=.5+Math.abs(t)/e;this.audioService.setSoundPitch(this.soundConfig.engineSoundKey,n)}}handleHorn(t){t&&this.audioService.playSound(this.soundConfig.hornSoundKey,{volume:1,interrupt:!0})}handleSkid(t,e,s,i){if(!this.stateContext.inputEnabled){this.stopSkid();return}const n=e.moveSpeed*.6,a=Math.abs(s-i),o=30*t,c=Math.abs(this.stateContext.velocity)>n,h=a>o,l=c&&h&&this.stateContext.velocity!==0;l&&!this.stateContext.isSkidding?(this.audioService.playSound(this.soundConfig.skidSoundKey,{volume:.6,loop:!0}),this.stateContext.updateIsSkidding(!0)):!l&&this.stateContext.isSkidding&&this.stopSkid()}playEngine(){this.audioService.playSound(this.soundConfig.engineSoundKey,{volume:.5,loop:!0}),this.stateContext.updateIsEnginePlaying(!0)}stopEngine(){this.audioService.stopSound(this.soundConfig.engineSoundKey),this.stateContext.updateIsEnginePlaying(!1)}stopSkid(){this.audioService.stopSound(this.soundConfig.skidSoundKey),this.stateContext.updateIsSkidding(!1)}playCrash(){this.audioService.playSound(this.soundConfig.crashSoundKey,{volume:.8,interrupt:!0})}stopAll(){this.stopEngine(),this.stopSkid(),this.audioService.stopSound(this.soundConfig.hornSoundKey)}}const C={ACCELERATE:"ArrowUp",BRAKE:"ArrowDown",TURN_LEFT:"ArrowLeft",TURN_RIGHT:"ArrowRight",HORN:"h",HANDBRAKE:" "};class N{state;constructor(){this.state=this.createInitialState()}getState(){return{...this.state}}updatePosition(t){this.state.position={...t}}updateRotation(t){this.state.rotation=t}updateVelocity(t){this.state.velocity=t}updateLastVelocity(t){this.state.lastVelocity=t}updateLastRotation(t){this.state.lastRotation=t}updateInputEnabled(t){this.state.inputEnabled=t}updateKeysEnabled(t){this.state.keysEnabled=t}updateWasOnTrack(t){this.state.wasOnTrack=t}updateIsEnginePlaying(t){this.state.isEnginePlaying=t}updateIsSkidding(t){this.state.isSkidding=t}get position(){return{...this.state.position}}get rotation(){return this.state.rotation}get velocity(){return this.state.velocity}get lastVelocity(){return this.state.lastVelocity}get lastRotation(){return this.state.lastRotation}get inputEnabled(){return this.state.inputEnabled}get keysEnabled(){return this.state.keysEnabled}get wasOnTrack(){return this.state.wasOnTrack}get isEnginePlaying(){return this.state.isEnginePlaying}get isSkidding(){return this.state.isSkidding}createInitialState(){return{position:{x:0,y:0},rotation:0,velocity:0,isEnginePlaying:!1,isSkidding:!1,lastVelocity:0,wasOnTrack:!0,lastRotation:0,inputEnabled:!0,keysEnabled:!0}}}class _{constructor(t,e,s,i,n,a,o){this.canvas=t,this.carConfig=e,this.stateContext=s,this.renderer=i,this.inputHandler=n,this.movementSystem=a,this.soundManager=o,this.setInputEnabled(this.carConfig.inputEnabled)}updateSteering(t){this.inputHandler.setSteeringInput(t)}updateAcceleration(t){this.inputHandler.setAccelerationInput(t)}setInputEnabled(t){this.stateContext.updateInputEnabled(t),t||this.stateContext.updateVelocity(0)}setTrackBoundary(t){this.trackBoundary=t}setStartingGrid(t){this.startingGrid=t,this.setStartingPosition(t.getStartingPosition())}setStartingPosition(t){this.stateContext.updatePosition({x:t.x,y:t.y}),this.stateContext.updateRotation(t.angle*(180/Math.PI)),this.stateContext.updateLastRotation(this.stateContext.rotation),this.stateContext.updateVelocity(0),this.stateContext.updateWasOnTrack(!0),this.soundManager?.stopSkid()}init(){}update(t){if(this.inputHandler.processInput(t.deltaTime),this.movementSystem.update(t.deltaTime),this.handleSoundEffects(t.deltaTime),this.trackBoundary&&this.startingGrid){const e=this.trackBoundary.checkCarOnTrack(this,this.startingGrid,t.deltaTime);this.handleTrackStateChange(e)}else this.keepInBounds()}handleTrackStateChange(t){!this.stateContext.wasOnTrack&&t?(this.stateContext.updateWasOnTrack(!0),this.stateContext.updateKeysEnabled(!0)):this.stateContext.wasOnTrack&&!t&&(this.stateContext.updateWasOnTrack(!1),this.stateContext.updateKeysEnabled(!1),this.soundManager?.playCrash(),this.soundManager?.stopSkid())}handleSoundEffects(t){this.soundManager?.handleEngine(this.stateContext.velocity,this.carConfig.moveSpeed),this.soundManager?.handleHorn(this.isKeyPressed(C.HORN)),this.soundManager?.handleSkid(t,{moveSpeed:this.carConfig.moveSpeed},this.stateContext.rotation,this.stateContext.lastRotation)}isKeyPressed(t){return this.inputHandler.isKeyPressed(t)}keepInBounds(){const t=this.carConfig.carWidth/2,e=this.carConfig.carHeight/2,s=this.stateContext.position,i=Math.max(t,Math.min(this.canvas.width-t,s.x)),n=Math.max(e,Math.min(this.canvas.height-e,s.y));(s.x!==i||s.y!==n)&&this.stateContext.updatePosition({x:i,y:n})}render(t){this.renderer.render(t)}onEnter(){this.stateContext.updatePosition({x:this.canvas.width/2,y:this.canvas.height/2}),this.stateContext.updateRotation(0),this.stateContext.updateLastRotation(0),this.stateContext.updateVelocity(0),this.stateContext.updateWasOnTrack(!0),this.stateContext.updateInputEnabled(!0),this.soundManager?.stopSkid()}onExit(){this.cleanup(),this.soundManager?.stopAll()}resize(){this.keepInBounds()}cleanup(){}name="Car";displayName="Car";trackBoundary;startingGrid;get velocity(){return this.stateContext.velocity}set velocity(t){this.stateContext.updateVelocity(t)}get position(){return this.stateContext.position}get rotation(){return this.stateContext.rotation}get carState(){return this.stateContext.getState()}}class V{sounds=new Map;activeSounds=new Map;async loadSound(t,e){if(this.sounds.has(t))return;const s=new Audio(e);return new Promise((i,n)=>{s.addEventListener("canplaythrough",()=>{this.sounds.set(t,s),i()}),s.addEventListener("error",()=>{n(new Error(`Failed to load sound: ${t}`))}),s.load()})}async preloadSounds(t){const e=t.map(s=>this.loadSound(s.key,s.path));await Promise.all(e)}playSound(t,e){const s=this.sounds.get(t);if(!s){console.warn(`Sound not found: ${t}`);return}e?.interrupt&&this.activeSounds.has(t)&&this.stopSound(t);const i=s.cloneNode();i.currentTime=0,i.volume=e?.volume??1,i.loop=e?.loop??!1,e?.onEnd&&(i.onended=e.onEnd),i.play().catch(n=>{console.error(`Failed to play sound ${t}:`,n)}),this.activeSounds.set(t,i)}stopSound(t){const e=this.activeSounds.get(t);e&&(e.pause(),e.currentTime=0,this.activeSounds.delete(t))}pauseSound(t){const e=this.activeSounds.get(t);e&&e.pause()}resumeSound(t){const e=this.activeSounds.get(t);e&&e.play().catch(s=>{console.error(`Failed to resume sound ${t}:`,s)})}setVolume(t,e){const s=this.activeSounds.get(t);s&&(s.volume=Math.max(0,Math.min(1,e)))}setSoundPitch(t,e){const s=this.activeSounds.get(t);s&&(s.playbackRate=Math.max(.1,Math.min(4,e)))}}class M{static async loadConfig(t,e){try{const s=await fetch(t);if(!s.ok)throw new Error(`Failed to load config: ${t}`);const i=await s.json();return{...e,...i}}catch(s){return console.warn(`Using default config for ${t}:`,s),e}}}const P={carWidth:50,carHeight:110,carColor:"red",moveSpeed:700,turnSpeed:200,useSprite:!0,spriteUrl:"assets/sprite/race_car.png",allowStationaryTurning:!1,inputEnabled:!1},L={engineSoundKey:"car-engine",engineSoundPath:"/assets/audio/car-engine.wav",crashSoundKey:"car-crash",crashSoundPath:"/assets/audio/car-crash.wav",hornSoundKey:"car-horn",hornSoundPath:"/assets/audio/car-horn.wav",skidSoundKey:"car-skid",skidSoundPath:"/assets/audio/car-skid.wav"};async function J(){try{const[r,t]=await Promise.all([M.loadConfig("/config/car-config.json",P),M.loadConfig("/config/car-sound-config.json",L)]);return{carConfig:r,soundConfig:t}}catch(r){return console.warn("Failed to load car configurations, using defaults. Error:",r),{carConfig:{...P},soundConfig:{...L}}}}async function U(r,t){const e=[{key:r.engineSoundKey,path:r.engineSoundPath},{key:r.crashSoundKey,path:r.crashSoundPath},{key:r.hornSoundKey,path:r.hornSoundPath},{key:r.skidSoundKey,path:r.skidSoundPath}];await t.preloadSounds(e).catch(()=>{console.warn("Failed to preload some car sounds")})}class j{constructor(t,e){this.carConfig=t,this.stateContext=e,this.loadSprite()}carImage;spriteLoaded=!1;loadSprite(){this.carConfig.spriteUrl&&(this.carImage=new Image,this.carImage.onload=()=>{this.spriteLoaded=!0},this.carImage.onerror=()=>{this.carConfig.useSprite=!1},this.carImage.src=this.carConfig.spriteUrl)}render(t){const e=t.ctx;e.save(),e.translate(this.stateContext.position.x,this.stateContext.position.y),e.rotate(this.stateContext.rotation*Math.PI/180),this.carConfig.useSprite&&this.spriteLoaded&&this.carImage?this.renderSprite(e):this.renderGeometricCar(e),e.restore()}renderGeometricCar(t){t.fillStyle=this.carConfig.carColor,t.fillRect(-this.carConfig.carWidth/2,-this.carConfig.carHeight/2,this.carConfig.carWidth,this.carConfig.carHeight),t.fillStyle="#333",t.fillRect(-this.carConfig.carWidth/2+5,-this.carConfig.carHeight/2+5,this.carConfig.carWidth-10,this.carConfig.carHeight/3)}renderSprite(t){this.carImage&&t.drawImage(this.carImage,-this.carConfig.carWidth/2,-this.carConfig.carHeight/2,this.carConfig.carWidth,this.carConfig.carHeight)}}class q{constructor(t,e,s){this.input=t,this.stateContext=e,this.config=s,this.usingJoystick=!1,this.joystickAcceleration=0,this.joystickSteering=0}usingJoystick;joystickAcceleration;joystickSteering;processInput(t){this.stateContext.inputEnabled&&(this.usingJoystick?(this.handleJoystickAcceleration(),this.handleJoystickSteering(t)):(this.handleKeyboardAcceleration(),this.handleKeyboardSteering(t)))}setSteeringInput(t){this.usingJoystick=!0,this.joystickSteering=t.direction.x*t.magnitude}setAccelerationInput(t){this.usingJoystick=!0,this.joystickAcceleration=-t.direction.y*t.magnitude}isKeyPressed(t){return this.input.keyboard.isKeyDown(t)&&this.stateContext.keysEnabled}handleKeyboardAcceleration(){this.isKeyPressed(C.ACCELERATE)?this.stateContext.updateVelocity(this.config.moveSpeed):this.isKeyPressed(C.BRAKE)?this.stateContext.updateVelocity(-this.config.moveSpeed*.3):this.isKeyPressed(C.HANDBRAKE)?this.stateContext.updateVelocity(this.stateContext.velocity*.95):this.stateContext.velocity!==0&&this.stateContext.updateVelocity(this.stateContext.velocity*.98)}handleKeyboardSteering(t){(this.config.allowStationaryTurning||this.stateContext.velocity!==0)&&(this.isKeyPressed(C.TURN_LEFT)&&this.stateContext.updateRotation(this.stateContext.rotation-this.config.turnSpeed*t),this.isKeyPressed(C.TURN_RIGHT)&&this.stateContext.updateRotation(this.stateContext.rotation+this.config.turnSpeed*t))}handleJoystickAcceleration(){this.joystickAcceleration>0?this.stateContext.updateVelocity(this.config.moveSpeed*this.joystickAcceleration):this.joystickAcceleration<0?this.stateContext.updateVelocity(this.config.moveSpeed*this.joystickAcceleration):this.stateContext.velocity!==0&&this.stateContext.updateVelocity(this.stateContext.velocity*.98)}handleJoystickSteering(t){(this.config.allowStationaryTurning||this.stateContext.velocity!==0)&&this.joystickSteering!==0&&this.stateContext.updateRotation(this.stateContext.rotation+this.joystickSteering*this.config.turnSpeed*t)}}class Z{constructor(t,e){this.gameEngine=t,this.canvas=e}async createCar(t=!1){const{carConfig:e,soundConfig:s}=await J();e.inputEnabled=t;const i=new V,n=new N,a=new j(e,n),o=new q(this.gameEngine.input,n,e),c=new K(n),h=new W(i,n,s),l=new _(this.canvas,e,n,a,o,c,h);return await U(s,i),l}}class Q{#e;#t=new Map;#s=new Set;#i="current";setMode(t){this.#i=t}getMode(){return this.#i}registerScene(t,e){this.#t.set(t,e),e.init?.()}transitionToScene(t){const e=this.#t.get(t);return e?(this.#e?.onExit?.(),this.#e=e,this.#e.name=t,this.#e.onEnter?.(),this.#n(),!0):(console.error(`Scene ${t} not found`),!1)}#n(){this.#s.forEach(t=>t())}updateAllScenes(t){for(const e of this.#t.values())e.update?.(t)}renderAllScenes(t){for(const e of this.#t.values())e.render?.(t)}get availableScenes(){return Array.from(this.#t.keys()).map(t=>({name:t,displayName:this.#t.get(t)?.displayName||t}))}get activeScene(){return this.#e?.name}get currentScene(){return this.#e}getAllScenes(){return Array.from(this.#t.values())}onSceneChange(t){return this.#s.add(t),()=>this.#s.delete(t)}}class tt{inputSystem;sceneSystem;debugMode=!1;sceneMode="current";constructor(t,e){this.inputSystem=t,this.sceneSystem=e}handleDebugToggle(){this.debugMode=!this.debugMode,console.log(`Debug mode: ${this.debugMode?"ON":"OFF"}`)}toggleSceneMode(){this.sceneMode=this.sceneMode==="current"?"all":"current",this.sceneSystem.setMode(this.sceneMode),this.debugMode&&console.log(`Scene mode: ${this.sceneMode.toUpperCase()}`)}setSceneMode(t){this.sceneMode=t,this.sceneSystem.setMode(t),this.debugMode&&console.log(`Scene mode set to: ${t.toUpperCase()}`)}getSceneMode(){return this.sceneMode}frameTick=t=>{this.inputSystem.update(),this.sceneMode==="current"?(this.sceneSystem.currentScene?.update?.(t),this.sceneSystem.currentScene?.render?.(t)):(this.sceneSystem.updateAllScenes(t),this.sceneSystem.renderAllScenes(t))};get availableScenes(){return this.sceneSystem.availableScenes}get activeScene(){return this.sceneSystem.activeScene}get input(){return this.inputSystem}onSceneChange(t){return this.sceneSystem.onSceneChange(t)}transitionToScene(t){return this.sceneSystem.transitionToScene(t)}registerScene(t,e){this.sceneSystem.registerScene(t,e)}}class et{gamepads=[];boundHandleGamepadConnected;boundHandleGamepadDisconnected;constructor(){this.boundHandleGamepadConnected=this.handleGamepadConnected.bind(this),this.boundHandleGamepadDisconnected=this.handleGamepadDisconnected.bind(this),this.setupEventListeners(),this.update()}getGamepad(t=0){return t<0||t>=this.gamepads.length?null:this.gamepads[t]}getConnectedGamepads(){return Array.from(navigator.getGamepads()).filter(t=>t!==null)}update(){this.gamepads=navigator.getGamepads()}destroy(){this.removeEventListeners(),this.gamepads=[]}setupEventListeners(){window.addEventListener("gamepadconnected",this.boundHandleGamepadConnected),window.addEventListener("gamepaddisconnected",this.boundHandleGamepadDisconnected)}removeEventListeners(){window.removeEventListener("gamepadconnected",this.boundHandleGamepadConnected),window.removeEventListener("gamepaddisconnected",this.boundHandleGamepadDisconnected)}handleGamepadConnected(t){console.log(`Gamepad connected: ${t.gamepad.id}`),this.update()}handleGamepadDisconnected(t){console.log(`Gamepad disconnected: ${t.gamepad.id}`),this.update()}}class st{gamepadConnectionTracker;previousStates;deadZones;buttonMap;axisMap;constructor(){this.gamepadConnectionTracker=new et,this.previousStates=[],this.deadZones={},this.buttonMap={A:0,B:1,X:2,Y:3,LB:4,RB:5,LT:6,RT:7,Back:8,Start:9,LStick:10,RStick:11,DUp:12,DDown:13,DLeft:14,DRight:15},this.axisMap={LeftStickX:0,LeftStickY:1,RightStickX:2,RightStickY:3},this.setDeadZone(0,.2),this.setDeadZone(1,.2),this.setDeadZone(2,.2),this.setDeadZone(3,.2)}update(){this.previousStates=[...this.gamepadConnectionTracker.getConnectedGamepads()],this.gamepadConnectionTracker.update()}isButtonDown(t,e){const s=typeof e=="string"?this.buttonMap[e]:e;return this.gamepadConnectionTracker.getGamepad(t)?.buttons[s]?.pressed||!1}isButtonPressed(t,e){const s=typeof e=="string"?this.buttonMap[e]:e,i=this.gamepadConnectionTracker.getGamepad(t),n=this.previousStates[t];return i?.buttons[s]?.pressed&&!n?.buttons[s]?.pressed||!1}isButtonReleased(t,e){const s=typeof e=="string"?this.buttonMap[e]:e,i=this.gamepadConnectionTracker.getGamepad(t),n=this.previousStates[t];return!i?.buttons[s]?.pressed&&n?.buttons[s]?.pressed||!1}getAxis(t,e){const s=typeof e=="string"?this.axisMap[e]:e,n=this.gamepadConnectionTracker.getGamepad(t)?.axes[s]||0,a=this.deadZones[s]||0;return Math.abs(n)<a?0:n}setButtonMapping(t,e){this.buttonMap[t]=e}setAxisMapping(t,e){this.axisMap[t]=e}setDeadZone(t,e){this.deadZones[t]=e}vibrate(t,e,s,i){const n=this.gamepadConnectionTracker.getGamepad(t);return n?.vibrationActuator?(n.vibrationActuator.playEffect("dual-rumble",{startDelay:0,duration:e,weakMagnitude:s,strongMagnitude:i}),!0):!1}}class it{keys;boundKeyDown;boundKeyUp;constructor(){this.keys={},this.boundKeyDown=this.#t.bind(this),this.boundKeyUp=this.#s.bind(this),this.#e()}isKeyDown(t){return this.keys[t]||!1}destroy(){window.removeEventListener("keydown",this.boundKeyDown),window.removeEventListener("keyup",this.boundKeyUp)}#e(){window.addEventListener("keydown",this.boundKeyDown),window.addEventListener("keyup",this.boundKeyUp)}#t(t){this.keys[t.key]=!0,["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"," "].includes(t.key)&&t.preventDefault()}#s(t){this.keys[t.key]=!1}}class nt{x;y;buttons;wheel;constructor(){this.x=0,this.y=0,this.buttons={},this.wheel=0}setupCanvasEvents(t){const e={passive:!1};t.addEventListener("mousemove",s=>{const i=t.getBoundingClientRect();this.x=s.clientX-i.left,this.y=s.clientY-i.top},e),t.addEventListener("mousedown",s=>{this.buttons[s.button]=!0},e),t.addEventListener("mouseup",s=>{this.buttons[s.button]=!1},e),t.addEventListener("wheel",s=>{this.wheel=s.deltaY,s.preventDefault()},{passive:!1})}update(){this.wheel=0}isButtonDown(t){return this.buttons[t]||!1}getPosition(){return{x:this.x,y:this.y}}getWheel(){return this.wheel}}let at=class{touchStartCallbacks=new Set;touchMoveCallbacks=new Set;touchEndCallbacks=new Set;registeredElements=new Set;registerElement(t){this.registeredElements.has(t)||(t.addEventListener("touchstart",this.handleTouchStart.bind(this),{passive:!1}),t.addEventListener("touchmove",this.handleTouchMove.bind(this),{passive:!1}),t.addEventListener("touchend",this.handleTouchEnd.bind(this),{passive:!1}),t.addEventListener("touchcancel",this.handleTouchEnd.bind(this),{passive:!1}),this.registeredElements.add(t))}unregisterElement(t){this.registeredElements.has(t)&&(t.removeEventListener("touchstart",this.handleTouchStart.bind(this)),t.removeEventListener("touchmove",this.handleTouchMove.bind(this)),t.removeEventListener("touchend",this.handleTouchEnd.bind(this)),t.removeEventListener("touchcancel",this.handleTouchEnd.bind(this)),this.registeredElements.delete(t))}onTouchStart(t){this.touchStartCallbacks.add(t)}onTouchMove(t){this.touchMoveCallbacks.add(t)}onTouchEnd(t){this.touchEndCallbacks.add(t)}handleTouchStart(t){this.touchStartCallbacks.forEach(e=>e(t))}handleTouchMove(t){this.touchMoveCallbacks.forEach(e=>e(t))}handleTouchEnd(t){this.touchEndCallbacks.forEach(e=>e(t))}};class ot{keyboard;mouse;gamepads;touches;constructor(){this.keyboard=new it,this.mouse=new nt,this.gamepads=new st,this.touches=new at}setupCanvasEvents(t){this.mouse.setupCanvasEvents(t)}update(){this.gamepads.update(),this.mouse.update()}}class rt{gameEngine;constructor(){this.gameEngine=new tt(new ot,new Q)}getGameEngine(){return this.gameEngine}}class f{static instance;config={trackWidth:1500,trackHeight:700,roadWidth:160,roadColor:"#555",backgroundColor:"#2a2a2a"};state={centerX:0,centerY:0,radiusX:0,radiusY:0};lapConfig={maxLaps:5};constructor(){}static getInstance(){return f.instance||(f.instance=new f),f.instance}getConfig(){return this.config}getState(){return this.state}getLapConfig(){return{...this.lapConfig}}updateConfig(t){this.config={...this.config,...t}}updateLapConfig(t){this.lapConfig={...this.lapConfig,...t}}calculateTrackState(t){this.state={centerX:t.width/2,centerY:t.height/2,radiusX:this.config.trackWidth/2,radiusY:this.config.trackHeight/2}}}class ct{constructor(t){this.canvas=t,this.init()}name="Elipse-Track";displayName="Elipse Track";configService=f.getInstance();init(){this.resize()}onEnter(){this.resize()}onExit(){}update(t){}render(t){this.elipse_track(t.ctx,this.configService.getConfig(),this.configService.getState())}resize(){this.configService.calculateTrackState(this.canvas)}elipse_track(t,e,s){t.beginPath(),t.ellipse(s.centerX,s.centerY,s.radiusX,s.radiusY,0,0,Math.PI*2),t.lineWidth=e.roadWidth,t.strokeStyle=e.roadColor,t.stroke()}}class ht{constructor(t){this.canvas=t,this.configService.calculateTrackState(this.canvas),this.init()}name="Rectangle-Track";displayName="Rectangle Track";configService=f.getInstance();init(){this.resize()}onEnter(){this.resize()}onExit(){}update(t){}render(t){this.rounded_rectangle(t.ctx,this.configService.getConfig(),this.configService.getState())}resize(){this.configService.calculateTrackState(this.canvas)}rounded_rectangle(t,e,s){const i=e.trackWidth,n=e.trackHeight,a=e.roadWidth,o=i/2,c=n/2,h=c,l=s.centerX,u=s.centerY;t.beginPath(),t.moveTo(l-o+h,u-c),t.lineTo(l+o-h,u-c),t.arcTo(l+o,u-c,l+o,u-c+h,h),t.lineTo(l+o,u+c-h),t.arcTo(l+o,u+c,l+o-h,u+c,h),t.lineTo(l-o+h,u+c),t.arcTo(l-o,u+c,l-o,u+c-h,h),t.lineTo(l-o,u-c+h),t.arcTo(l-o,u-c,l-o+h,u-c,h),t.lineWidth=a,t.strokeStyle=e.roadColor,t.stroke()}}class lt{constructor(t,e={}){this.canvas=t,this.config={...this.getDefaultConfig(),...e},this.enableMargins=this.config.enableMargins,this.debugMode=this.config.debugMode,this.configService.calculateTrackState(this.canvas)}name="Track-Boundary";displayName="Track Boundary";config;isOnTrack=!0;offTrackTimer=0;hapticFeedback;configService=f.getInstance();pulseAnimationPhase=0;enableMargins;debugMode;getDefaultConfig(){return{outerBoundaryOffset:35,innerBoundaryOffset:35,debugOuterColor:"rgba(0, 255, 0, 0.3)",debugInnerColor:"rgba(255, 0, 0, 0.3)",maxOffTrackTime:5e3,offTrackSlowdown:.95,enableMargins:!0,debugMode:!1}}toggleMargins(t){this.enableMargins=t}setHapticFeedback(t){this.hapticFeedback=t}init(){}onEnter(){this.isOnTrack=!0,this.offTrackTimer=0,this.pulseAnimationPhase=0}onExit(){}update(t){const e=t.deltaTime;this.isOnTrack?(this.offTrackTimer=0,this.pulseAnimationPhase=0):(this.offTrackTimer+=e*1e3,this.pulseAnimationPhase+=e/500)}render(t){if(this.debugMode&&this.renderDebug(t.ctx),!this.isOnTrack){const e=t.ctx,s=t.ctx.canvas,i=s.width/2,n=s.height/2,a=.5+Math.abs(Math.sin(this.pulseAnimationPhase))*.5,o=Math.ceil((this.config.maxOffTrackTime-this.offTrackTimer)/1e3);e.save();const c=.8+a*.2;e.fillStyle=`rgba(255, 0, 0, ${c})`,e.font="bold 48px Arial",e.textAlign="center",e.textBaseline="middle",e.shadowColor="rgba(255, 255, 255, 0.8)",e.shadowBlur=10,e.shadowOffsetX=0,e.shadowOffsetY=0,e.fillText("OFF TRACK!",i,n-40),e.font="bold 36px Arial",e.shadowBlur=5,e.fillText(`Reset in: ${o}s`,i,n+40),e.restore()}}resize(){}checkCarOnTrack(t,e,s){const i=this.isOnTrack;if(this.isOnTrack=this.isCarOnTrack(t),this.isOnTrack)this.offTrackTimer=0;else{if(this.offTrackTimer+=s*1e3,this.offTrackTimer>=this.config.maxOffTrackTime)return this.resetCar(t,e),!1;t.velocity*=this.config.offTrackSlowdown}return i&&!this.isOnTrack&&this.hapticFeedback&&this.hapticFeedback(100),this.isOnTrack}resetCar(t,e){this.offTrackTimer=0,this.isOnTrack=!0,t.setStartingPosition(e.getStartingPosition()),t.velocity=0}isCarOnTrack(t){const e=this.configService.getConfig(),s=this.configService.getState(),i=30,n=50,a=[{x:t.position.x-i/2,y:t.position.y-n/2},{x:t.position.x+i/2,y:t.position.y+n/2},{x:t.position.x-i/2,y:t.position.y+n/2},{x:t.position.x+i/2,y:t.position.y+n/2},{x:t.position.x,y:t.position.y}],o=e.trackWidth/2,c=e.trackHeight/2,h=c,l=e.roadWidth,u=s.centerX,d=s.centerY,p=this.enableMargins?this.config.outerBoundaryOffset:0,y=this.enableMargins?this.config.innerBoundaryOffset:0,T=o+l/2+p,w=c+l/2+p,E=h+l/2+p,g=o-l/2-y,m=c-l/2-y,B=h-l/2-y;for(const R of a)if(!this.isPointInRoundedRect(R,u,d,T,w,E)||this.isPointInRoundedRect(R,u,d,g,m,B))return!1;return!0}isPointInRoundedRect(t,e,s,i,n,a){if(Math.abs(t.x-e)<=i-a&&Math.abs(t.y-s)<=n-a)return!0;const o=Math.abs(t.x-e)-(i-a),c=Math.abs(t.y-s)-(n-a);return o>0&&c>0?o*o+c*c<=a*a:Math.abs(t.x-e)<=i&&Math.abs(t.y-s)<=n}renderDebug(t){const e=this.configService.getConfig(),s=this.configService.getState(),i=e.trackWidth/2,n=e.trackHeight/2,a=n,o=e.roadWidth,c=s.centerX,h=s.centerY,l=this.enableMargins?this.config.outerBoundaryOffset:0,u=this.enableMargins?this.config.innerBoundaryOffset:0;t.fillStyle=this.config.debugOuterColor,this.drawRoundedRect(t,c,h,i+o/2+l,n+o/2+l,a+o/2+l),t.fillStyle=this.config.debugInnerColor,this.drawRoundedRect(t,c,h,i-o/2-u,n-o/2-u,a-o/2-u)}drawRoundedRect(t,e,s,i,n,a){t.beginPath(),t.moveTo(e-i+a,s-n),t.lineTo(e+i-a,s-n),t.arcTo(e+i,s-n,e+i,s-n+a,a),t.lineTo(e+i,s+n-a),t.arcTo(e+i,s+n,e+i-a,s+n,a),t.lineTo(e-i+a,s+n),t.arcTo(e-i,s+n,e-i,s+n-a,a),t.lineTo(e-i,s-n+a),t.arcTo(e-i,s-n,e-i+a,s-n,a),t.fill()}}class dt{name="Starting-Grid";displayName="Starting Grid";configService=f.getInstance();config;constructor(t={}){this.config={...this.getDefaultConfig(),...t}}getDefaultConfig(){return{stripeWidth:10,stripeLength:50,stripeCount:11,offset:40}}setConfig(t){this.config={...this.config,...t}}calculateStartPosition(){const t=this.configService.getConfig(),e=this.configService.getState();return{x:e.centerX,y:e.centerY-t.trackHeight/2+this.config.offset,angle:Math.PI/2}}render(t){const e=this.calculateStartPosition(),s=this.config.stripeWidth*this.config.stripeCount;t.ctx.save();for(let i=0;i<this.config.stripeCount;i++)t.ctx.globalAlpha=.4,t.ctx.fillStyle=i%2===0?"white":"black",t.ctx.fillRect(e.x-s/2+i*this.config.stripeWidth,e.y-this.config.stripeLength/2,this.config.stripeWidth,this.config.stripeLength);t.ctx.restore()}getStartingPosition(){return this.calculateStartPosition()}resize(){}init(){}update(t){}onEnter(){}onExit(){}}class ut{name="Road-Markings";displayName="Road Markings";configService=f.getInstance();config;constructor(t={}){this.config={lineWidth:4,lineColor:"#ffffff",dashLength:20,gapLength:35,...t}}setConfig(t){this.config={...this.config,...t}}init(){}onEnter(){}onExit(){}resize(){}update(t){}render(t){const e=this.configService.getConfig(),s=this.configService.getState(),i=this.calculateTrackSegments(e,s),n=i.reduce((a,o)=>a+o.length,0);t.ctx.save(),t.ctx.strokeStyle=this.config.lineColor,t.ctx.lineWidth=this.config.lineWidth,t.ctx.lineCap="round",this.drawDashedLineAlongSegments(t.ctx,i,n),t.ctx.restore()}drawDashedLineAlongSegments(t,e,s){const i=this.config.dashLength+this.config.gapLength,n=Math.ceil(s/i);for(let a=0;a<n;a++){const o=a*i,c=o,h=Math.min(o+this.config.dashLength,s);c<s&&this.drawLineSegment(t,e,c,Math.min(h,s))}}drawLineSegment(t,e,s,i){t.beginPath();let n=s,a=this.findSegmentAtDistance(e,n);const o=this.getPointAtDistance(e,n);for(t.moveTo(o.x,o.y);n<i&&a<e.length;){const c=e[a],l=c.start+c.length-n,u=i-n,d=Math.min(l,u),p=this.getPointAtDistance(e,n+d);t.lineTo(p.x,p.y),n+=d,a++}t.stroke()}findSegmentAtDistance(t,e){for(let s=0;s<t.length;s++)if(e<=t[s].start+t[s].length)return s;return t.length-1}getPointAtDistance(t,e){const s=this.findSegmentAtDistance(t,e),i=t[s],n=e-i.start;return i.getPoint(n)}calculateTrackSegments(t,e){const s=t.trackWidth/2,i=t.trackHeight/2,n=i,a=e.centerX,o=e.centerY,c=[];let h=0;const l=t.trackWidth-2*n;c.push({type:"straight",start:h,length:l,getPoint:g=>({x:a-s+n+g,y:o-i})}),h+=l;const u=Math.PI*n/2;c.push({type:"curve",start:h,length:u,getPoint:g=>{const m=-Math.PI/2+g/n;return{x:a+s-n+n*Math.cos(m),y:o-i+n+n*Math.sin(m)}}}),h+=u;const d=t.trackHeight-2*n;c.push({type:"straight",start:h,length:d,getPoint:g=>({x:a+s,y:o-i+n+g})}),h+=d;const p=Math.PI*n/2;c.push({type:"curve",start:h,length:p,getPoint:g=>{const m=g/n;return{x:a+s-n+n*Math.cos(m),y:o+i-n+n*Math.sin(m)}}}),h+=p;const y=t.trackWidth-2*n;c.push({type:"straight",start:h,length:y,getPoint:g=>({x:a+s-n-g,y:o+i})}),h+=y;const T=Math.PI*n/2;c.push({type:"curve",start:h,length:T,getPoint:g=>{const m=Math.PI/2+g/n;return{x:a-s+n+n*Math.cos(m),y:o+i-n+n*Math.sin(m)}}}),h+=T;const w=t.trackHeight-2*n;c.push({type:"straight",start:h,length:w,getPoint:g=>({x:a-s,y:o+i-n-g})}),h+=w;const E=Math.PI*n/2;return c.push({type:"curve",start:h,length:E,getPoint:g=>{const m=Math.PI+g/n;return{x:a-s+n+n*Math.cos(m),y:o-i+n+n*Math.sin(m)}}}),c}}class gt{name="Track-Grass";displayName="Track Grass";configService=f.getInstance();config;constructor(t={}){this.config={grassColor:"#2d7d2d",...t}}onEnter(){}onExit(){}update(t){}render(t){this.drawRoundedGrass(t.ctx)}resize(){}drawRoundedGrass(t){const e=this.configService.getConfig(),s=this.configService.getState(),i=e.trackWidth/2,n=e.trackHeight/2,a=n,o=e.roadWidth,c=s.centerX,h=s.centerY,l=i-o/2,u=n-o/2,d=a-o/2;t.fillStyle=this.config.grassColor,t.beginPath(),t.moveTo(c-l+d,h-u),t.lineTo(c+l-d,h-u),t.arcTo(c+l,h-u,c+l,h-u+d,d),t.lineTo(c+l,h+u-d),t.arcTo(c+l,h+u,c+l-d,h+u,d),t.lineTo(c-l+d,h+u),t.arcTo(c-l,h+u,c-l,h+u-d,d),t.lineTo(c-l,h-u+d),t.arcTo(c-l,h-u,c-l+d,h-u,d),t.fill()}}class ft{constructor(t,e=!1,s={}){this.positionProvider=t,this.turnOn=e,this.sectors=s.sectors||4,this.currentSector=0,this.lapCount=0,this.sectorTimes=new Array(this.sectors).fill(0),this.completedSectorTimes=[],this.lastSectorTime=0,this.startTime=0,this.lastLapStart=0,this.lapTimes=[],this.isRunning=!1,this.completedSectors=new Array(this.sectors).fill(!1)}name="Lap-Tracker";displayName="Lap Tracker";sectors;currentSector;lapCount;sectorTimes;completedSectorTimes;lastSectorTime;startTime;lastLapStart;lapTimes;onRaceComplete;isRunning;configService=f.getInstance();completedSectors;init(){}onEnter(){this.reset(),this.turnOn&&this.start()}onExit(){}update(t){if(!this.isRunning)return;const e=this.configService.getState(),s=this.positionProvider.position.x-e.centerX,i=this.positionProvider.position.y-e.centerY,n=Math.atan2(i,s)+Math.PI/2,a=2*Math.PI/this.sectors,o=(n+2*Math.PI)%(2*Math.PI),c=Math.floor(o/a);if(c!==this.currentSector){const h=performance.now(),l=(c-this.currentSector+this.sectors)%this.sectors,u=l===1||this.currentSector===this.sectors-1&&c===0,d=l===this.sectors-1||this.currentSector===0&&c===this.sectors-1;u?this.handleForwardMovement(c,h):d&&this.handleBackwardMovement(c),this.currentSector=c}}handleForwardMovement(t,e){if(this.sectorTimes[this.currentSector]=e-this.lastSectorTime,this.lastSectorTime=e,this.completedSectors[this.currentSector]=!0,t===0&&this.isLapComplete()){const s=e-this.lastLapStart;this.lapTimes.push(s),this.completedSectorTimes.push([...this.sectorTimes]),this.lastLapStart=e,this.lapCount++,this.sectorTimes.fill(0),this.completedSectors.fill(!1);const i=this.configService.getLapConfig().maxLaps;this.lapCount>=i&&this.onRaceComplete&&(this.stop(),this.onRaceComplete())}}handleBackwardMovement(t){this.completedSectors[this.currentSector]=!1,t===0&&this.completedSectors.fill(!1)}isLapComplete(){return this.completedSectors.every(t=>t)}render(t){const e=t.ctx,s=this.configService.getLapConfig().maxLaps;e.save(),e.fillStyle="white",e.font="16px Arial",e.textAlign="left",e.fillText(`Status: ${this.isRunning?"Running":"Stopped"}`,20,30),e.fillText(`Lap: ${this.lapCount}/${s}`,20,50),e.fillText(`Sector: ${this.currentSector+1}`,20,70);let i=90;if(this.completedSectorTimes.length>0){const n=this.completedSectorTimes[this.completedSectorTimes.length-1];for(let a=0;a<n.length;a++)e.fillText(`Sector ${a+1}: ${(n[a]/1e3).toFixed(2)}s`,20,i+a*20);i+=n.length*20+20}for(let n=0;n<this.sectorTimes.length;n++)this.sectorTimes[n]>0&&e.fillText(`Current S${n+1}: ${(this.sectorTimes[n]/1e3).toFixed(2)}s`,20,i+n*20);i+=this.sectorTimes.length*20,this.isRunning&&(e.fillText(`Current Lap: ${((performance.now()-this.lastLapStart)/1e3).toFixed(2)}s`,20,i),e.fillText(`Total: ${((performance.now()-this.startTime)/1e3).toFixed(2)}s`,20,i+20)),e.restore()}resize(){}start(){if(this.isRunning)return;this.isRunning=!0;const t=performance.now();this.lapCount===0&&this.lapTimes.length===0&&(this.startTime=t,this.lastLapStart=t,this.lastSectorTime=t,this.completedSectors.fill(!1))}stop(){this.isRunning=!1}reset(){this.isRunning=!1,this.lapCount=0,this.currentSector=0,this.sectorTimes.fill(0),this.completedSectorTimes=[],this.lapTimes=[],this.lastSectorTime=0,this.startTime=0,this.lastLapStart=0,this.completedSectors.fill(!1)}getLapTimes(){return[...this.lapTimes]}setRaceCompleteCallback(t){this.onRaceComplete=t}getCurrentLap(){return this.lapCount}getCurrentSector(){return this.currentSector}getSectorTimes(){return[...this.sectorTimes]}getTotalTime(){return this.isRunning?(performance.now()-this.startTime)/1e3:0}isTracking(){return this.isRunning}}class S{constructor(t){this.inputSystem=t}static NAME="Mouse-Cursor";static DISPLAY_NAME="Mouse Cursor";static RECT_SIZE=10;static RECT_COLOR="red";previousButtonState=!1;clickPoints=[];name=S.NAME;displayName=S.DISPLAY_NAME;update(t){const e=this.inputSystem.mouse.getPosition(),s=this.inputSystem.mouse.isButtonDown(0);if(s&&!this.previousButtonState){const i={x:e.x,y:e.y};this.clickPoints.push(i),console.log(`Click point: ${i.x}, ${i.y}`)}this.previousButtonState=s}render(t){const e=t.ctx.canvas,s=e.clientWidth||e.width,i=e.clientHeight||e.height,n=e.width/s,a=e.height/i,o=S.RECT_SIZE/2;this.clickPoints.forEach(c=>{const h=c.x*n,l=c.y*a;t.ctx.fillStyle=S.RECT_COLOR,t.ctx.fillRect(h-o,l-o,S.RECT_SIZE,S.RECT_SIZE)})}}class pt{constructor(t,e){this.onCountdownGO=t,this.onCountdownComplete=e,this.onGO=this.onCountdownGO,this.onComplete=this.onCountdownComplete}name="Countdown";displayName="Countdown";showOverlay=!1;countdownState="waiting";countdownValue=3;countdownTimer=0;totalTime=0;onComplete;onGO;init(){}onEnter(){this.reset(),this.countdownState="waiting",this.countdownTimer=.5}onExit(){}update(t){switch(this.totalTime+=t.deltaTime,this.countdownState){case"waiting":this.countdownTimer-=t.deltaTime,this.countdownTimer<=0&&(this.countdownState="counting",this.countdownValue=3,this.countdownTimer=1);break;case"counting":this.countdownTimer-=t.deltaTime,this.countdownTimer<=0&&(this.countdownValue--,this.countdownValue<=0?(this.countdownState="go",this.countdownTimer=1.2,this.onGO&&this.onGO()):this.countdownTimer=1);break;case"go":this.countdownTimer-=t.deltaTime,this.countdownTimer<=0&&(this.countdownState="complete",this.onComplete&&this.onComplete());break}}render(t){const{ctx:e}=t,s=e.canvas,i=s.width/2,n=s.height/2;switch(e.save(),this.showOverlay&&(this.countdownState==="waiting"||this.countdownState==="counting")&&(e.fillStyle="rgba(0, 0, 0, 0.5)",e.fillRect(0,0,s.width,s.height)),e.textAlign="center",e.textBaseline="middle",this.countdownState){case"waiting":break;case"counting":this.drawCountdownText(e,i,n,this.countdownValue.toString());break;case"go":this.drawGoText(e,i,n);break}e.restore()}drawCountdownText(t,e,s,i){t.fillStyle="#ffffff",t.strokeStyle="#000000",t.lineWidth=8,t.font="bold 200px Arial",t.strokeText(i,e,s),t.fillText(i,e,s),t.shadowColor="#ff0000",t.shadowBlur=20,t.fillText(i,e,s),t.shadowBlur=0}drawGoText(t,e,s){t.fillStyle="#00ff00",t.strokeStyle="#000000",t.lineWidth=10,t.font="bold 180px Impact",t.strokeText("GO!",e,s),t.fillText("GO!",e,s),t.shadowColor="#ffff00",t.shadowBlur=25,t.fillText("GO!",e,s),t.shadowBlur=0}resize(){}reset(){this.countdownState="waiting",this.countdownValue=3,this.countdownTimer=.5,this.totalTime=0}isComplete(){return this.countdownState==="complete"}startAgain(){this.reset(),this.countdownState="waiting",this.countdownTimer=.5}}class mt{constructor(t){this.inputSystem=t}name="Continue";displayName="Continue";showOverlay=!1;restartButton={x:0,y:0,width:250,height:70,text:"RESTART RACE",isHovered:!1,isVisible:!1};onRestartRace;setOnRestartRace(t){this.onRestartRace=t}show(){this.restartButton.isVisible=!0}hide(){this.restartButton.isVisible=!1}toggleButton(){this.restartButton.isVisible=!this.restartButton.isVisible}init(){}update(t){if(!this.restartButton.isVisible)return;const e=t.ctx.canvas,s=e.width/2,i=e.height/2;this.restartButton.x=s-this.restartButton.width/2,this.restartButton.y=i-this.restartButton.height/2;const n=this.inputSystem.mouse.getPosition(),a=e.clientWidth||e.width,o=e.clientHeight||e.height,c=e.width/a,h=e.height/o,l=n.x*c,u=n.y*h,d=this.inputSystem.mouse.isButtonDown(0);this.restartButton.isHovered=l>=this.restartButton.x&&l<=this.restartButton.x+this.restartButton.width&&u>=this.restartButton.y&&u<=this.restartButton.y+this.restartButton.height,this.restartButton.isHovered&&d&&this.onRestartRace&&this.onRestartRace()}render(t){if(!this.restartButton.isVisible)return;const{ctx:e}=t,s=e.canvas,i=s.width/2,n=s.height/2;this.showOverlay&&(e.fillStyle="rgba(0, 0, 0, 0.7)",e.fillRect(0,0,s.width,s.height)),e.fillStyle="#ecf0f1",e.font="bold 36px 'Arial'",e.textAlign="center",e.fillText("RACE COMPLETED!",i,n-100);const a=this.restartButton,o=e.createLinearGradient(a.x,a.y,a.x,a.y+a.height);a.isHovered?(o.addColorStop(0,"#27ae60"),o.addColorStop(1,"#219a52")):(o.addColorStop(0,"#2ecc71"),o.addColorStop(1,"#27ae60")),e.fillStyle=o;const c=12;e.beginPath(),e.moveTo(a.x+c,a.y),e.lineTo(a.x+a.width-c,a.y),e.quadraticCurveTo(a.x+a.width,a.y,a.x+a.width,a.y+c),e.lineTo(a.x+a.width,a.y+a.height-c),e.quadraticCurveTo(a.x+a.width,a.y+a.height,a.x+a.width-c,a.y+a.height),e.lineTo(a.x+c,a.y+a.height),e.quadraticCurveTo(a.x,a.y+a.height,a.x,a.y+a.height-c),e.lineTo(a.x,a.y+c),e.quadraticCurveTo(a.x,a.y,a.x+c,a.y),e.closePath(),e.fill(),e.strokeStyle=a.isHovered?"#1e8449":"#27ae60",e.lineWidth=3,e.stroke(),e.shadowColor="rgba(0, 0, 0, 0.3)",e.shadowBlur=10,e.shadowOffsetX=0,e.shadowOffsetY=4,e.fillStyle="#ffffff",e.font="bold 24px 'Arial'",e.textAlign="center",e.textBaseline="middle",e.shadowColor="rgba(0, 0, 0, 0.5)",e.shadowBlur=4,e.shadowOffsetX=2,e.shadowOffsetY=2,e.fillText(a.text,a.x+a.width/2,a.y+a.height/2),e.shadowColor="transparent",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0,e.fillStyle="#bdc3c7",e.font="18px 'Arial'",e.fillText("Click to race again",i,a.y+a.height+40)}onEnter(){console.log("Entering continue scene")}onExit(){console.log("Exiting continue scene"),this.hide()}resize(){}}class A{touchStartCallbacks=new Set;touchMoveCallbacks=new Set;touchEndCallbacks=new Set;registeredElements=new Set;registerElement(t){this.registeredElements.has(t)||(t.addEventListener("touchstart",this.handleTouchStart.bind(this),{passive:!1}),t.addEventListener("touchmove",this.handleTouchMove.bind(this),{passive:!1}),t.addEventListener("touchend",this.handleTouchEnd.bind(this),{passive:!1}),t.addEventListener("touchcancel",this.handleTouchEnd.bind(this),{passive:!1}),this.registeredElements.add(t))}unregisterElement(t){this.registeredElements.has(t)&&(t.removeEventListener("touchstart",this.handleTouchStart.bind(this)),t.removeEventListener("touchmove",this.handleTouchMove.bind(this)),t.removeEventListener("touchend",this.handleTouchEnd.bind(this)),t.removeEventListener("touchcancel",this.handleTouchEnd.bind(this)),this.registeredElements.delete(t))}onTouchStart(t){this.touchStartCallbacks.add(t)}onTouchMove(t){this.touchMoveCallbacks.add(t)}onTouchEnd(t){this.touchEndCallbacks.add(t)}handleTouchStart(t){this.touchStartCallbacks.forEach(e=>e(t))}handleTouchMove(t){this.touchMoveCallbacks.forEach(e=>e(t))}handleTouchEnd(t){this.touchEndCallbacks.forEach(e=>e(t))}}class yt{constructor(t){this.inputSystem=t,this.touchEventSystem=new A,this.initializeButtons(),this.detectTouchDevice(),this.setupTouchEvents()}name="Menu";displayName="Menu";buttons=[];lapButtons=[];isActive=!0;configService=f.getInstance();wasMousePressed=!1;wasTouchPressed=!1;isTouchDevice=!1;touchEventSystem;touchPosition={x:0,y:0};detectTouchDevice(){this.isTouchDevice="ontouchstart"in window||navigator.maxTouchPoints>0}setupTouchEvents(){this.isTouchDevice&&(this.touchEventSystem.onTouchStart(t=>{t.preventDefault();const e=t.target,s=e.getBoundingClientRect();this.touchPosition.x=(t.touches[0].clientX-s.left)*(e.width/s.width),this.touchPosition.y=(t.touches[0].clientY-s.top)*(e.height/s.height),this.wasTouchPressed=!0}),this.touchEventSystem.onTouchMove(t=>{t.preventDefault();const e=t.target,s=e.getBoundingClientRect();this.touchPosition.x=(t.touches[0].clientX-s.left)*(e.width/s.width),this.touchPosition.y=(t.touches[0].clientY-s.top)*(e.height/s.height)}),this.touchEventSystem.onTouchEnd(()=>{this.wasTouchPressed=!1}))}initializeButtons(){this.buttons=[{x:0,y:0,width:200,height:60,text:"START",isHovered:!1,wasPressed:!1}],this.lapButtons=[{x:0,y:0,width:40,height:40,text:"-",isHovered:!1,wasPressed:!1,action:()=>this.adjustLapCount(-1)},{x:0,y:0,width:40,height:40,text:"+",isHovered:!1,wasPressed:!1,action:()=>this.adjustLapCount(1)}]}adjustLapCount(t){const e=this.configService.getLapConfig().maxLaps,s=Math.max(1,e+t);this.configService.updateLapConfig({maxLaps:s})}getLapConfig(){return this.configService.getLapConfig()}setOnStartGame(t){this.buttons[0].action=t}toggle(){this.isActive=!this.isActive}show(){this.isActive=!0}hide(){this.isActive=!1}init(){if(this.isTouchDevice){const t=document.querySelector("canvas");t&&this.touchEventSystem.registerElement(t)}}update(t){if(!this.isActive)return;const e=t.ctx.canvas,s=e.width/2,i=e.height/2;this.buttons[0].x=s-this.buttons[0].width/2,this.buttons[0].y=i+80;const a=s-95/2;this.lapButtons[0].x=a,this.lapButtons[0].y=i+170,this.lapButtons[1].x=a+60,this.lapButtons[1].y=i+170;let o=0,c=0,h=!1,l=!1;if(this.isTouchDevice)o=this.touchPosition.x,c=this.touchPosition.y,h=this.wasTouchPressed,l=this.wasTouchPressed;else{const d=this.inputSystem.mouse.getPosition(),p=e.clientWidth||e.width,y=e.clientHeight||e.height,T=e.width/p,w=e.height/y;o=d.x*T,c=d.y*w,h=this.inputSystem.mouse.isButtonDown(0),l=h&&!this.wasMousePressed}[...this.buttons,...this.lapButtons].forEach(d=>{d.isHovered=o>=d.x&&o<=d.x+d.width&&c>=d.y&&c<=d.y+d.height,d.isHovered&&l&&(d.wasPressed=!0),d.isHovered&&!h&&d.wasPressed&&(d.action&&d.action(),d.wasPressed=!1),h||(d.wasPressed=!1)}),this.wasMousePressed=h}render(t){if(!this.isActive)return;const{ctx:e}=t,s=e.canvas,i=s.width/2,n=s.height/2,a=this.configService.getLapConfig();e.fillStyle="#2c3e50",e.fillRect(0,0,s.width,s.height),e.fillStyle="#ecf0f1",e.font="bold 48px 'Arial'",e.textAlign="center",e.fillText("TURBO LAPS",i,n-60),e.fillStyle="#bdc3c7",e.font="24px 'Arial'",e.fillText(`${a.maxLaps}-Lap Time Trial`,i,n-20),e.fillStyle="#95a5a6",e.font="18px 'Arial'",e.fillText(`Complete ${a.maxLaps} laps around the track as fast as possible!`,i,n+20),e.fillText("Avoid obstacles and beat your best time to win!",i,n+50),this.buttons.forEach(o=>{e.fillStyle=o.isHovered?"#27ae60":"#2ecc71",e.fillRect(o.x,o.y,o.width,o.height),e.strokeStyle="#ecf0f1",e.lineWidth=2,e.strokeRect(o.x,o.y,o.width,o.height),e.fillStyle="#ffffff",e.font="bold 24px 'Arial'",e.fillText(o.text,o.x+o.width/2,o.y+o.height/2+8)}),this.lapButtons.forEach(o=>{e.fillStyle=o.isHovered?"#3498db":"#2980b9",e.fillRect(o.x,o.y,o.width,o.height),e.strokeStyle="#ecf0f1",e.lineWidth=2,e.strokeRect(o.x,o.y,o.width,o.height),e.fillStyle="#ffffff",e.font="bold 20px 'Arial'",e.fillText(o.text,o.x+o.width/2,o.y+o.height/2+6)})}onEnter(){}onExit(){if(this.isTouchDevice){const t=document.querySelector("canvas");t&&this.touchEventSystem.unregisterElement(t)}}resize(){}}class St{name="Game-Score";displayName="Game Score";config;state;configService=f.getInstance();constructor(t={}){this.config={maxRecords:5,textColor:"white",bestTimeColor:"gold",lastTimeColor:"red",fontSize:16,fontFamily:"Arial",title:"Best Race Times",padding:20,...t},this.state={bestRaceTimes:[],lastRaceTimeIndex:null}}init(){}onEnter(){}onExit(){}update(t){}resize(){}onRaceComplete(t){const e=t.getLapTimes();if(e.length>=1){const s=e.reduce((i,n)=>i+n,0);this.addRaceTime(s)}}addRaceTime(t){const s=[...[...this.state.bestRaceTimes],t].sort((i,n)=>i-n).slice(0,this.config.maxRecords);this.state.lastRaceTimeIndex=s.indexOf(t),this.state.bestRaceTimes=s}render(t){if(this.state.bestRaceTimes.length===0)return;const e=t.ctx,s=t.ctx.canvas,i=this.configService.getLapConfig();e.save(),e.font=`${this.config.fontSize}px ${this.config.fontFamily}`,e.textAlign="left",e.textBaseline="bottom";const n=`${this.config.title} (${i.maxLaps} laps)`,a=e.measureText(n),o=a.actualBoundingBoxAscent+a.actualBoundingBoxDescent,c=this.config.fontSize+5,h=o+this.state.bestRaceTimes.length*c,l=this.config.padding,u=s.height-this.config.padding;e.fillStyle=this.config.textColor,e.fillText(n,l,u-h+o);for(let d=0;d<this.state.bestRaceTimes.length;d++){const p=this.state.bestRaceTimes[d],y=u-h+o+(d+1)*c;d===0?e.fillStyle=this.config.bestTimeColor:d===this.state.lastRaceTimeIndex?e.fillStyle=this.config.lastTimeColor:e.fillStyle=this.config.textColor,e.fillText(`${d+1}. ${(p/1e3).toFixed(2)}s`,l,y)}e.restore()}reset(){this.state.bestRaceTimes=[],this.state.lastRaceTimeIndex=null}getBestTimes(){return[...this.state.bestRaceTimes]}}var v=(r=>(r.Both="both",r.XOnly="x-only",r.YOnly="y-only",r))(v||{});class vt{renderBase(t,e,s,i,n){t.save(),t.globalAlpha=.4,t.fillStyle=n.includes("acceleration")?"#3498db":"#2c3e50",t.beginPath(),t.arc(e,s,i,0,Math.PI*2),t.fill(),t.globalAlpha=.8,t.strokeStyle="#ecf0f1",t.lineWidth=3,t.stroke(),t.restore()}renderStick(t,e,s,i,n){t.save(),t.globalAlpha=.9,t.fillStyle=n.includes("acceleration")?"#2980b9":"#e74c3c",t.beginPath(),t.arc(e,s,i,0,Math.PI*2),t.fill(),t.globalAlpha=1,t.strokeStyle="#ffffff",t.lineWidth=2,t.stroke(),t.restore()}}class Tt{calculatePosition(t,e,s){return e.position?e.position:e.relativePosition?{x:t.width*e.relativePosition.x,y:t.height*e.relativePosition.y}:s.includes("acceleration")?{x:t.width*.2,y:t.height*.8}:{x:t.width*.8,y:t.height*.8}}}class wt{constructor(t,e={},s=new A,i=new vt,n=new Tt){this.canvas=t,this.config=e,this.touchSystem=s,this.renderer=i,this.positionCalculator=n,this.state={isActive:!1,direction:{x:0,y:0},magnitude:0,centerX:0,centerY:0,stickX:0,stickY:0},this.axisMode=e.axisMode||v.Both;const a=e.identifier||"default";this.name=`Virtual-Joystick-${a}`,this.displayName=`Virtual Joystick ${a}`}state;maxStickMovement=60;deadZone=.1;baseRadius=60;stickRadius=30;touchId=null;steeringControl=null;accelerationControl=null;showJoystick=!0;axisMode;centerX=0;centerY=0;isInitialized=!1;name;displayName;setAxisMode(t){this.axisMode=t,this.resetJoystick()}setSteeringControl(t){this.steeringControl=t}setAccelerationControl(t){this.accelerationControl=t}enable(){this.showJoystick=!0}disable(){this.showJoystick=!1,this.resetJoystick()}handleTouchStart(t){if(!this.showJoystick||this.touchId!==null)return;const e=this.canvas.getBoundingClientRect(),s=this.canvas.width/e.width,i=this.canvas.height/e.height;for(const n of Array.from(t.touches)){const a=(n.clientX-e.left)*s,o=(n.clientY-e.top)*i;if(Math.sqrt(Math.pow(a-this.centerX,2)+Math.pow(o-this.centerY,2))<=this.baseRadius*2){this.touchId=n.identifier,this.state.isActive=!0,this.updateStickPosition(a,o),t.preventDefault();break}}}handleTouchMove(t){if(this.touchId===null||!this.showJoystick)return;const e=Array.from(t.touches).find(c=>c.identifier===this.touchId);if(!e)return;const s=this.canvas.getBoundingClientRect(),i=this.canvas.width/s.width,n=this.canvas.height/s.height,a=(e.clientX-s.left)*i,o=(e.clientY-s.top)*n;this.updateStickPosition(a,o),t.preventDefault()}handleTouchEnd(t){if(this.touchId===null||!this.showJoystick)return;Array.from(t.changedTouches).find(s=>s.identifier===this.touchId)&&this.resetInputState()}updateStickPosition(t,e){const s=t-this.centerX,i=e-this.centerY;let n=s,a=i;this.axisMode===v.XOnly?a=0:this.axisMode===v.YOnly&&(n=0);const o=Math.min(Math.sqrt(n*n+a*a),this.maxStickMovement),c=Math.atan2(a,n);this.state.stickX=this.centerX+Math.cos(c)*o,this.state.stickY=this.centerY+Math.sin(c)*o;const h=o>0?n/o:0,l=o>0?a/o:0,u=o/this.maxStickMovement;this.state.direction={x:this.axisMode===v.YOnly?0:h,y:this.axisMode===v.XOnly?0:l},this.state.magnitude=u>this.deadZone?u:0,this.dispatchInputEvents(),this.updateControls()}resetInputState(){this.touchId=null,this.state.isActive=!1,this.state.direction={x:0,y:0},this.state.magnitude=0,this.state.stickX=this.centerX,this.state.stickY=this.centerY,this.dispatchInputEvents(),this.updateControls()}resetJoystick(){this.resetInputState()}dispatchInputEvents(){const t=new CustomEvent("virtualJoystickInput",{detail:this.createInputObject()});window.dispatchEvent(t)}updateControls(){const t=this.createInputObject();this.steeringControl?this.steeringControl.updateSteering(t):this.accelerationControl&&this.accelerationControl.updateAcceleration(t)}createInputObject(){return{isActive:this.state.isActive,direction:{...this.state.direction},magnitude:this.state.magnitude,axisMode:this.axisMode,identifier:this.config.identifier||"default"}}init(){this.isInitialized||(this.calculatePosition(),this.resetInputState(),this.setupEventListeners(),this.enable(),this.isInitialized=!0)}setupEventListeners(){this.touchSystem.registerElement(this.canvas),this.touchSystem.onTouchStart(this.handleTouchStart.bind(this)),this.touchSystem.onTouchMove(this.handleTouchMove.bind(this)),this.touchSystem.onTouchEnd(this.handleTouchEnd.bind(this))}removeEventListeners(){this.touchSystem.unregisterElement(this.canvas)}update(){}render(t){this.showJoystick&&(this.renderer.renderBase(t.ctx,this.centerX,this.centerY,this.baseRadius,this.config.identifier||"default"),this.renderer.renderStick(t.ctx,this.state.stickX,this.state.stickY,this.stickRadius,this.config.identifier||"default"))}calculatePosition(){const t=this.positionCalculator.calculatePosition(this.canvas,this.config,this.config.identifier||"default");this.centerX=t.x,this.centerY=t.y,this.state.centerX=this.centerX,this.state.centerY=this.centerY,this.state.stickX=this.centerX,this.state.stickY=this.centerY}onEnter(){this.isInitialized||(this.setupEventListeners(),this.calculatePosition(),this.isInitialized=!0)}onExit(){this.removeEventListeners(),this.resetJoystick()}resize(){this.calculatePosition(),this.resetInputState()}getPosition(){return{x:this.centerX,y:this.centerY}}getIdentifier(){return this.config.identifier||"default"}}class Ct{constructor(t){this.canvas=t,this.state={x:0,y:0,rotation:0,speed:0,maxSpeed:8,acceleration:.3,steeringSpeed:.05,friction:.95},this.showDebug=!0,this.accelerationInput=0,this.steeringInput=0}state;showDebug;accelerationInput;steeringInput;name="Test-Car";displayName="Test Car";updateSteering(t){this.steeringInput=t.direction.x*t.magnitude}updateAcceleration(t){this.accelerationInput=-t.direction.y*t.magnitude}applySteering(){this.state.rotation+=this.steeringInput*this.state.steeringSpeed}applyAcceleration(){this.state.speed+=this.accelerationInput*this.state.acceleration,this.state.speed=Math.max(-this.state.maxSpeed,Math.min(this.state.speed,this.state.maxSpeed))}applyFriction(){this.state.speed*=this.state.friction,Math.abs(this.state.speed)<.1&&(this.state.speed=0)}updatePosition(){this.applySteering(),this.applyAcceleration(),this.applyFriction(),this.state.x+=Math.cos(this.state.rotation)*this.state.speed,this.state.y+=Math.sin(this.state.rotation)*this.state.speed,this.state.x=(this.state.x+this.canvas.width)%this.canvas.width,this.state.y=(this.state.y+this.canvas.height)%this.canvas.height}drawCar(t){t.save(),t.translate(this.state.x,this.state.y),t.rotate(this.state.rotation),t.fillStyle="#ff4444",t.beginPath(),t.moveTo(20,0),t.lineTo(-15,-10),t.lineTo(-15,10),t.closePath(),t.fill(),t.strokeStyle="#ffffff",t.lineWidth=2,t.stroke(),t.restore()}drawDebugInfo(t){if(!this.showDebug)return;t.save(),t.fillStyle="#ffffff",t.font="14px Arial",t.textAlign="left",t.textBaseline="top",[`Speed: ${this.state.speed.toFixed(2)}`,`Rotation: ${this.state.rotation.toFixed(2)}`,`Position: (${Math.round(this.state.x)}, ${Math.round(this.state.y)})`,`Accel Input: ${this.accelerationInput.toFixed(2)}`,`Steer Input: ${this.steeringInput.toFixed(2)}`].forEach((s,i)=>{t.fillText(s,10,10+i*20)}),t.restore()}init(){this.state.x=this.canvas.width/2,this.state.y=this.canvas.height/2}update(t){this.updatePosition()}render(t){this.drawCar(t.ctx),this.drawDebugInfo(t.ctx)}onEnter(){this.state.x=this.canvas.width/2,this.state.y=this.canvas.height/2,this.state.rotation=0,this.state.speed=0,this.accelerationInput=0,this.steeringInput=0}onExit(){}resize(){this.state.x=this.canvas.width/2,this.state.y=this.canvas.height/2}toggleDebug(){this.showDebug=!this.showDebug}getCarState(){return{...this.state}}setCarPosition(t,e){this.state.x=t,this.state.y=e}resetCar(){this.state.speed=0,this.state.rotation=0,this.state.x=this.canvas.width/2,this.state.y=this.canvas.height/2,this.accelerationInput=0,this.steeringInput=0}}class kt{constructor(t){this.canvas=t,this.state={x:0,y:0,velocityX:0,velocityY:0,maxSpeed:8,acceleration:.3,friction:.95,width:40,height:20},this.showDebug=!0}state;showDebug;name="Steerable-Rect";displayName="Steerable Rectangle";updateSteering(t){if(!t.isActive){this.applyFriction();return}const e=t.direction.x,s=t.direction.y;this.applyAcceleration(e,s),this.applyFriction()}applyAcceleration(t,e){this.state.velocityX+=t*this.state.acceleration,this.state.velocityY+=e*this.state.acceleration;const s=Math.sqrt(this.state.velocityX*this.state.velocityX+this.state.velocityY*this.state.velocityY);if(s>this.state.maxSpeed){const i=this.state.maxSpeed/s;this.state.velocityX*=i,this.state.velocityY*=i}}applyFriction(){this.state.velocityX*=this.state.friction,this.state.velocityY*=this.state.friction,Math.abs(this.state.velocityX)<.1&&Math.abs(this.state.velocityY)<.1&&(this.state.velocityX=0,this.state.velocityY=0)}updatePosition(){this.state.x+=this.state.velocityX,this.state.y+=this.state.velocityY,this.state.x=(this.state.x+this.canvas.width)%this.canvas.width,this.state.y=(this.state.y+this.canvas.height)%this.canvas.height}drawRect(t){t.save(),t.translate(this.state.x,this.state.y),t.fillStyle="#3498db",t.fillRect(-this.state.width/2,-this.state.height/2,this.state.width,this.state.height),t.strokeStyle="#ffffff",t.lineWidth=2,t.strokeRect(-this.state.width/2,-this.state.height/2,this.state.width,this.state.height),t.restore()}drawDebugInfo(t){if(!this.showDebug)return;t.save(),t.fillStyle="#ffffff",t.font="14px Arial",t.textAlign="left",t.textBaseline="top",[`Speed: ${Math.sqrt(this.state.velocityX*this.state.velocityX+this.state.velocityY*this.state.velocityY).toFixed(2)}`,`Velocity: (${this.state.velocityX.toFixed(2)}, ${this.state.velocityY.toFixed(2)})`,`Position: (${Math.round(this.state.x)}, ${Math.round(this.state.y)})`].forEach((i,n)=>{t.fillText(i,10,10+n*20)}),t.restore()}init(){this.state.x=this.canvas.width/2,this.state.y=this.canvas.height/2}update(t){this.updatePosition()}render(t){this.drawRect(t.ctx),this.drawDebugInfo(t.ctx)}onEnter(){this.state.x=this.canvas.width/2,this.state.y=this.canvas.height/2,this.state.velocityX=0,this.state.velocityY=0}onExit(){}resize(){this.state.x=this.canvas.width/2,this.state.y=this.canvas.height/2}toggleDebug(){this.showDebug=!this.showDebug}getRectState(){return{...this.state}}setRectPosition(t,e){this.state.x=t,this.state.y=e}resetRect(){this.state.velocityX=0,this.state.velocityY=0,this.state.x=this.canvas.width/2,this.state.y=this.canvas.height/2}}class Et{constructor(t,e){this.gameEngine=t,this.canvas=e}createElipseTrack(){return new ct(this.canvas)}createRectangleTrack(){return new ht(this.canvas)}createTrackBoundary(){return new lt(this.canvas)}createStartingGrid(){return new dt}createRoadMarkings(){return new ut}createTrackGrass(){return new gt}createLapTracker(t,e=!1){return new ft(t,e)}createCountdown(t,e){return new pt(t,e)}createContinue(){return new mt(this.gameEngine.input)}createMouseCursor(){return new S(this.gameEngine.input)}createMenu(){return new yt(this.gameEngine.input)}createGameScore(){return new St}createVirtualJoystick(t={}){return new wt(this.canvas,t)}createTestCar(){return new Ct(this.canvas)}createSteerableRect(){return new kt(this.canvas)}}class bt{constructor(t){this.gameEngine=t}setupCanvas(t,e){X(t,e,this.gameEngine);const s=this.getCanvasSizeById(e);return this.gameEngine.input.setupCanvasEvents(s),s}getCanvasSizeById(t){const e=document.getElementById(t);if(!e)throw new Error(`Canvas element with ID '${t}' not found`);if(!(e instanceof HTMLCanvasElement))throw new Error(`Element with ID '${t}' is not a canvas element`);return e}}var k=(r=>(r.ELIPSE_TRACK="Elipse-Track",r.STEERABLE_RECT="Steerable-Rect",r.TEST_CAR="Test-Car",r.SOUND_DEMO="Sound-Demo",r.VIRTUAL_JOYSTICK="Virtual-Joystick",r.MOUSE_CURSOR="Mouse-Cursor",r.RECTANGLE_TRACK="Rectangle-Track",r.CAR="Car",r.TRACK_BOUNDARY="Track-Boundary",r.STARTING_GRID="Starting-Grid",r.ROAD_MARKINGS="Road-Markings",r.TRACK_GRASS="Track-Grass",r.LAP_TRACKER="Lap-Tracker",r.GAME_SCORE="Game-Score",r.MENU="Menu",r.COUNTDOWN="Countdown",r.CONTINUE="Continue",r))(k||{}),b=(r=>(r.JOYSTICK_TEST="Joystick-Test",r.XY_JOYSTICK_TEST="XY-Joystick-Test",r.JOYSTICK_FOR_CAR="Joystick-For-Car",r.TRACK_CURSOR="Track-Cursor",r.START_RACE="Start-Race",r.CAR_OUT_OF_TRACK="Car-Out-Of-Track",r.LAP_MEASUREMENT="Lap-Measurement",r.RACE_RESTART="Race-Restart",r))(b||{}),x=(r=>(r.TURBO_LAPS_PC="TurboLaps-Pc",r.TURBO_LAPS_MOBILE="TurboLaps-Mobile",r))(x||{});const xt={"Elipse-Track":"Oval racing track with smooth curves","Steerable-Rect":"bla","Test-Car":"Player-controlled racing vehicle","Sound-Demo":"Audio effects demonstration","Virtual-Joystick":"Touch-based control interface (mobile)","Mouse-Cursor":"Mouse pointer interaction system","Rectangle-Track":"Rectangular track with sharp corners",Car:"Player-controlled racing vehicle","Track-Boundary":"Boundary walls and collision detection","Starting-Grid":"Initial race positioning area","Road-Markings":"Track surface markings and guidelines","Track-Grass":"Off-track grassy areas","Lap-Tracker":"Lap counting and timing system","Game-Score":"Score display and performance metrics",Menu:"Game menu interface and navigation",Countdown:"Race start countdown sequence",Continue:"Game continuation prompts"},Rt={"Joystick-Test":"Test of joystick controlling car","XY-Joystick-Test":"bla","Joystick-For-Car":"bla","Track-Cursor":"Track selection and cursor interaction","Start-Race":"Race initialization and start sequence","Car-Out-Of-Track":"Off-track detection and handling","Lap-Measurement":"Lap timing and progress tracking","Race-Restart":"Race reset and replay functionality"},Mt={"TurboLaps-Pc":"Complete Turbo Laps game for PC with keyboard controls","TurboLaps-Mobile":"Complete Turbo Laps game for mobile with touch controls"};class Pt{urlParams;sceneMode;sceneName;singleScene;multiScene;game;constructor(){this.urlParams=new URLSearchParams(window.location.search),this.sceneMode=this.urlParams.get("mode")||"current",this.sceneName=this.urlParams.get("scene")||k.ELIPSE_TRACK,this.singleScene=this.determineSingleScene(),this.multiScene=this.determineMultiScene(),this.game=this.determineGame()}determineSingleScene(){return this.urlParams.size>0&&this.sceneMode==="current"&&this.isScene(this.sceneName)?this.sceneName:null}isScene(t){return Object.values(k).includes(t)}determineMultiScene(){return this.urlParams.size>0&&this.sceneMode==="all"&&this.isMultiScene(this.sceneName)?this.sceneName:null}isMultiScene(t){return Object.values(b).includes(t)}determineGame(){return this.urlParams.size>0&&this.sceneMode==="all"&&this.isGame(this.sceneName)?this.sceneName:null}isGame(t){return Object.values(x).includes(t)}logOptions(){console.log("=== Test URL Options ==="),console.log("Single Scene:");const t="http://localhost:5173/";Object.values(k).forEach(e=>{console.log(`${t}/?mode=current&scene=${encodeURIComponent(e)}`)}),console.log("Multi Scene:"),Object.values(b).forEach(e=>{console.log(`${t}/?mode=all&scene=${encodeURIComponent(e)}`)}),console.log("Game:"),Object.values(x).forEach(e=>{console.log(`${t}/?mode=all&scene=${encodeURIComponent(e)}`)})}logSelection(){console.log(`Scene mode: ${this.sceneMode}`),this.logSingleScene(),this.logMultiScene(),this.logGame()}logSingleScene(){this.sceneMode==="current"&&this.singleScene&&console.log(`Testing single scene: ${this.singleScene} - ${xt[this.singleScene]}`)}logMultiScene(){this.sceneMode==="all"&&this.multiScene&&console.log(`Testing multi-scene: ${this.multiScene} - ${Rt[this.multiScene]}`)}logGame(){this.sceneMode==="all"&&this.game&&console.log(`Testing game: ${this.game} - ${Mt[this.game]}`)}}function Lt(r=!1){const e=new rt().getGameEngine(),i=new bt(e).setupCanvas("canvas-container","game-canvas"),n=new Pt;r&&n.logOptions(),e.setSceneMode(n.sceneMode);const a=new Et(e,i);return{gameEngine:e,canvas:i,sceneInstanceFactory:a,urlParamsHandler:n}}class At{constructor(t,e){this.factory=t,this.carFactory=e}scenes=[];startingGrid;trackBoundary;car;lapTracker;countdown;continueBtn;gameScore;async withRectangleTrack(){const t=this.factory.createRectangleTrack();return this.scenes.push(t),this}async withTrackGrass(){const t=this.factory.createTrackGrass();return this.scenes.push(t),this}async withRoadMarkings(){const t=this.factory.createRoadMarkings();return this.scenes.push(t),this}async withStartingGrid(){return this.startingGrid=this.factory.createStartingGrid(),this.scenes.push(this.startingGrid),this}async withCar(){if(!this.startingGrid)throw new Error("Starting grid must be set before adding player");if(!this.trackBoundary)throw new Error("Track Boundary must be set before adding player");return this.car=await this.carFactory.createCar(!1),this.car.setStartingGrid(this.startingGrid),this.car.setStartingPosition(this.startingGrid.getStartingPosition()),this.car.setTrackBoundary(this.trackBoundary),this.scenes.push(this.car),this}async withTrackBoundary(){return this.trackBoundary=this.factory.createTrackBoundary(),this.scenes.push(this.trackBoundary),this}async withCountdown(){if(!this.car)throw new Error("Player must be set before adding Countdown");if(!this.lapTracker)throw new Error("LapTracker must be set before adding Countdown");return this.countdown=this.factory.createCountdown(()=>{this.car.setInputEnabled(!0),this.lapTracker.start()},()=>{}),this.scenes.push(this.countdown),this}async withLapTracker(){if(!this.car)throw new Error("Player must be set before adding LapTracker");if(!this.startingGrid)throw new Error("StartingGrid must be set before adding LapTracker");if(!this.gameScore)throw new Error("GameScore must be set before adding LapTracker");return this.lapTracker=this.factory.createLapTracker(this.car),this.lapTracker.setRaceCompleteCallback(()=>{this.gameScore.onRaceComplete(this.lapTracker),this.lapTracker.reset(),this.car.setInputEnabled(!1),this.car.setStartingPosition(this.startingGrid.getStartingPosition()),this.continueBtn.show()}),this.scenes.push(this.lapTracker),this}async withContinueBtn(){if(!this.countdown)throw new Error("Countdown must be set before adding Continue");return this.continueBtn=this.factory.createContinue(),this.continueBtn.setOnRestartRace(()=>{this.continueBtn.hide(),this.countdown.startAgain()}),this.scenes.push(this.continueBtn),this}async withGameScore(){return this.gameScore=this.factory.createGameScore(),this.scenes.push(this.gameScore),this}async withCarJoystick(){if(!this.car)throw new Error("Car must be set before adding CarJoystick");const t=this.factory.createVirtualJoystick({relativePosition:{x:.2,y:.8},axisMode:v.YOnly,identifier:"acceleration"}),e=this.factory.createVirtualJoystick({relativePosition:{x:.8,y:.8},axisMode:v.XOnly,identifier:"steering"});return t.setAccelerationControl(this.car),e.setSteeringControl(this.car),this.scenes.push(t),this.scenes.push(e),this}build(){if(this.scenes.length===0)throw new Error("No scenes configured");return this.validateScenes(),this.scenes}validateScenes(){const t=s=>"getStartingPosition"in s;this.scenes.filter(t).length===0&&console.warn("No starting grid scenes found")}}class Bt{constructor(t,e,s){this.factory=t,this.gameEngine=e,this.gameBuilder=s}scene={};withStartMenu(){const t=this.factory.createMenu();return t.setOnStartGame(async()=>{(await this.gameBuilder.buildGame()).forEach(s=>{this.gameEngine.registerScene(s.name,s)}),t.toggle(),this.gameEngine.setSceneMode("all")}),this.scene=t,this}build(){return this.scene}}class Ot{constructor(t){this.gameBuilder=t}async buildGame(){return await this.gameBuilder.withRectangleTrack().then(e=>e.withTrackGrass()).then(e=>e.withRoadMarkings()).then(e=>e.withStartingGrid()).then(e=>e.withTrackBoundary()).then(e=>e.withCar()).then(e=>e.withGameScore()).then(e=>e.withLapTracker()).then(e=>e.withCountdown()).then(e=>e.withContinueBtn()).then(e=>e.withCarJoystick()).then(e=>e.build())}}class It{constructor(t,e){this.gameEngine=t,this.menuBuilder=e}async setup(){const t=this.menuBuilder.withStartMenu().build();this.gameEngine.registerScene(t.name,t),this.gameEngine.transitionToScene(t.name)}}async function Dt(r,t,e){const s=new At(r,t);new It(e,new Bt(r,e,new Ot(s))).setup()}async function Gt(){const{gameEngine:r,canvas:t,sceneInstanceFactory:e}=Lt(),s=new Z(r,t);await Dt(e,s,r)}window.addEventListener("load",async()=>{Gt()});
