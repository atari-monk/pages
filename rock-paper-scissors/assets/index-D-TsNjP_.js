(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const u of a.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&n(u)}).observe(document,{childList:!0,subtree:!0});function s(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerPolicy&&(a.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?a.credentials="include":i.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function n(i){if(i.ep)return;i.ep=!0;const a=s(i);fetch(i.href,a)}})();class b{fullscreenButton;canvasResizer;renderer;constructor(e,s,n){this.fullscreenButton=e,this.canvasResizer=s,this.renderer=n,this.canvasResizer.resize(),this.renderer.start()}destroy(){this.renderer.stop(),this.fullscreenButton.destroy(),this.canvasResizer.destroy()}}class S{resizeObserver=null;resizeTimer=null;lastDimensions={width:0,height:0};canvas;constructor(e){this.canvas=e,this.canvas.style.width="100%",this.canvas.style.height="100%",this.setupEventListeners(),this.resize()}resize(){const e=this.canvas.getBoundingClientRect(),s=window.devicePixelRatio||1,n=Math.floor(e.width*s),i=Math.floor(e.height*s);(n!==this.lastDimensions.width||i!==this.lastDimensions.height)&&(this.canvas.width=n,this.canvas.height=i,this.lastDimensions={width:n,height:i},this.dispatchResizeEvent())}destroy(){this.resizeTimer&&(clearTimeout(this.resizeTimer),this.resizeTimer=null),this.resizeObserver&&(this.resizeObserver.disconnect(),this.resizeObserver=null)}setupEventListeners(){this.resizeObserver=new ResizeObserver(()=>{this.resizeTimer&&clearTimeout(this.resizeTimer),this.resizeTimer=window.setTimeout(()=>{this.resize(),this.resizeTimer=null},100)}),this.resizeObserver.observe(this.canvas)}dispatchResizeEvent(){const e=new CustomEvent("canvas-resized",{detail:{width:this.canvas.width,height:this.canvas.height,pixelRatio:window.devicePixelRatio||1}});this.canvas.dispatchEvent(e)}}class C{canvas;engineHook;options;timeCalculator;rafId=0;isRunning=!1;ctx;constructor(e,s,n,i){this.canvas=e,this.engineHook=s,this.options=n,this.timeCalculator=i;const a=this.canvas.getContext("2d");if(!a)throw new Error("Failed to get 2D rendering context. Canvas may be unsupported.");this.ctx=a}start(){this.isRunning||(console.log("start"),this.isRunning=!0,this.timeCalculator.reset(),this.rafId=requestAnimationFrame(this.frameTick.bind(this)))}stop(){this.isRunning&&(this.isRunning=!1,cancelAnimationFrame(this.rafId))}frameTick(e){const{deltaTime:s,totalTime:n}=this.timeCalculator.calculate(e),i={ctx:this.ctx,width:this.canvas.width,height:this.canvas.height,deltaTime:s,totalTime:n};this.ctx.clearRect(0,0,i.width,i.height),this.engineHook.frameTick(i),this.options.isAnimLoop&&this.isRunning&&(this.rafId=requestAnimationFrame(this.frameTick.bind(this)))}}class E{lastTime=0;totalTime=0;calculate(e){this.lastTime===0&&(this.lastTime=e);const s=(e-this.lastTime)/1e3;return this.lastTime=e,this.totalTime+=s,{deltaTime:s,totalTime:this.totalTime,lastTime:this.lastTime}}reset(){this.lastTime=0,this.totalTime=0}}class T{container;button;isTouchDevice;fullscreenChangeHandler;buttonClickHandler;constructor(e){this.container=e,this.isTouchDevice=this.isTouchDeviceCheck(),this.button=this.createFullscreenButton(),this.fullscreenChangeHandler=this.updateButtonVisibility.bind(this),this.buttonClickHandler=this.handleFullscreenToggle.bind(this),this.setupEventListeners(),this.updateButtonVisibility()}destroy(){document.removeEventListener("fullscreenchange",this.fullscreenChangeHandler),this.button.removeEventListener("click",this.buttonClickHandler),this.button.remove()}createFullscreenButton(){const e=document.createElement("button");return e.className="fullscreen-button",e.textContent="Enter Fullscreen",this.container.appendChild(e),e}async handleFullscreenToggle(){try{document.fullscreenElement?await document.exitFullscreen():await this.container.requestFullscreen()}catch(e){console.warn("Fullscreen error:",e)}}setupEventListeners(){document.addEventListener("fullscreenchange",this.fullscreenChangeHandler),this.button.addEventListener("click",this.buttonClickHandler)}updateButtonVisibility(){const e=document.fullscreenElement!==null;this.button.textContent=e?"Exit Fullscreen":"Enter Fullscreen",this.button.classList.toggle("visible",this.isTouchDevice&&!e)}isTouchDeviceCheck(){return typeof window>"u"?!1:"ontouchstart"in window||navigator.maxTouchPoints>0||window.matchMedia("(pointer: coarse)").matches}}function k(o,e,s,n={}){const{container:i,canvas:a}=D(o,e);return L(i,A(a,R(n),s))}function D(o,e){const s=document.getElementById(o),n=document.getElementById(e);if(!s)throw new Error(`Container with ID ${o} not found`);if(!n)throw new Error(`Canvas with ID ${e} not found`);if(!(n instanceof HTMLCanvasElement))throw new Error(`Element with ID ${e} is not a canvas`);return{container:s,canvas:n}}function L(o,e){return new b(new T(o),e.canvasResizer,e.renderer)}function R(o){return{isAnimLoop:!0,...o}}function A(o,e,s){return{canvasResizer:new S(o),renderer:new C(o,s,e,new E)}}class H{#e;#t=new Map;#s=new Set;registerScene(e,s){this.#t.set(e,s),s.init?.()}transitionToScene(e){const s=this.#t.get(e);return s?(this.#e?.onExit?.(),this.#e=s,this.#e.name=e,this.#e.onEnter?.(),this.#n(),!0):(console.error(`Scene ${e} not found`),!1)}#n(){this.#s.forEach(e=>e())}get availableScenes(){return Array.from(this.#t.keys()).map(e=>({name:e,displayName:this.#t.get(e)?.displayName||e}))}get activeScene(){return this.#e?.name}get currentScene(){return this.#e}onSceneChange(e){return this.#s.add(e),()=>this.#s.delete(e)}}class z{inputSystem;sceneSystem;debugMode=!0;constructor(e,s){this.inputSystem=e,this.sceneSystem=s}handleDebugToggle(){this.debugMode=!this.debugMode,console.log(`Debug mode: ${this.debugMode?"ON":"OFF"}`)}frameTick=e=>{this.inputSystem.update(),this.sceneSystem.currentScene?.update?.(e),this.sceneSystem.currentScene?.render?.(e)};get availableScenes(){return this.sceneSystem.availableScenes}get activeScene(){return this.sceneSystem.activeScene}get input(){return this.inputSystem}onSceneChange(e){return this.sceneSystem.onSceneChange(e)}transitionToScene(e){return this.sceneSystem.transitionToScene(e)}registerScene(e,s){this.sceneSystem.registerScene(e,s)}}class G{gamepads=[];boundHandleGamepadConnected;boundHandleGamepadDisconnected;constructor(){this.boundHandleGamepadConnected=this.handleGamepadConnected.bind(this),this.boundHandleGamepadDisconnected=this.handleGamepadDisconnected.bind(this),this.setupEventListeners(),this.update()}getGamepad(e=0){return e<0||e>=this.gamepads.length?null:this.gamepads[e]}getConnectedGamepads(){return Array.from(navigator.getGamepads()).filter(e=>e!==null)}update(){this.gamepads=navigator.getGamepads()}destroy(){this.removeEventListeners(),this.gamepads=[]}setupEventListeners(){window.addEventListener("gamepadconnected",this.boundHandleGamepadConnected),window.addEventListener("gamepaddisconnected",this.boundHandleGamepadDisconnected)}removeEventListeners(){window.removeEventListener("gamepadconnected",this.boundHandleGamepadConnected),window.removeEventListener("gamepaddisconnected",this.boundHandleGamepadDisconnected)}handleGamepadConnected(e){console.log(`Gamepad connected: ${e.gamepad.id}`),this.update()}handleGamepadDisconnected(e){console.log(`Gamepad disconnected: ${e.gamepad.id}`),this.update()}}class M{gamepadConnectionTracker;previousStates;deadZones;buttonMap;axisMap;constructor(){this.gamepadConnectionTracker=new G,this.previousStates=[],this.deadZones={},this.buttonMap={A:0,B:1,X:2,Y:3,LB:4,RB:5,LT:6,RT:7,Back:8,Start:9,LStick:10,RStick:11,DUp:12,DDown:13,DLeft:14,DRight:15},this.axisMap={LeftStickX:0,LeftStickY:1,RightStickX:2,RightStickY:3},this.setDeadZone(0,.2),this.setDeadZone(1,.2),this.setDeadZone(2,.2),this.setDeadZone(3,.2)}update(){this.previousStates=[...this.gamepadConnectionTracker.getConnectedGamepads()],this.gamepadConnectionTracker.update()}isButtonDown(e,s){const n=typeof s=="string"?this.buttonMap[s]:s;return this.gamepadConnectionTracker.getGamepad(e)?.buttons[n]?.pressed||!1}isButtonPressed(e,s){const n=typeof s=="string"?this.buttonMap[s]:s,i=this.gamepadConnectionTracker.getGamepad(e),a=this.previousStates[e];return i?.buttons[n]?.pressed&&!a?.buttons[n]?.pressed||!1}isButtonReleased(e,s){const n=typeof s=="string"?this.buttonMap[s]:s,i=this.gamepadConnectionTracker.getGamepad(e),a=this.previousStates[e];return!i?.buttons[n]?.pressed&&a?.buttons[n]?.pressed||!1}getAxis(e,s){const n=typeof s=="string"?this.axisMap[s]:s,a=this.gamepadConnectionTracker.getGamepad(e)?.axes[n]||0,u=this.deadZones[n]||0;return Math.abs(a)<u?0:a}setButtonMapping(e,s){this.buttonMap[e]=s}setAxisMapping(e,s){this.axisMap[e]=s}setDeadZone(e,s){this.deadZones[e]=s}vibrate(e,s,n,i){const a=this.gamepadConnectionTracker.getGamepad(e);return a?.vibrationActuator?(a.vibrationActuator.playEffect("dual-rumble",{startDelay:0,duration:s,weakMagnitude:n,strongMagnitude:i}),!0):!1}}class P{keys;boundKeyDown;boundKeyUp;constructor(){this.keys={},this.boundKeyDown=this.#t.bind(this),this.boundKeyUp=this.#s.bind(this),this.#e()}isKeyDown(e){return this.keys[e]||!1}destroy(){window.removeEventListener("keydown",this.boundKeyDown),window.removeEventListener("keyup",this.boundKeyUp)}#e(){window.addEventListener("keydown",this.boundKeyDown),window.addEventListener("keyup",this.boundKeyUp)}#t(e){this.keys[e.key]=!0,["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"," "].includes(e.key)&&e.preventDefault()}#s(e){this.keys[e.key]=!1}}class F{x;y;buttons;wheel;constructor(){this.x=0,this.y=0,this.buttons={},this.wheel=0}setupCanvasEvents(e){const s={passive:!1};e.addEventListener("mousemove",n=>{const i=e.getBoundingClientRect();this.x=n.clientX-i.left,this.y=n.clientY-i.top},s),e.addEventListener("mousedown",n=>{this.buttons[n.button]=!0},s),e.addEventListener("mouseup",n=>{this.buttons[n.button]=!1},s),e.addEventListener("wheel",n=>{this.wheel=n.deltaY,n.preventDefault()},{passive:!1})}update(){this.wheel=0}isButtonDown(e){return this.buttons[e]||!1}getPosition(){return{x:this.x,y:this.y}}getWheel(){return this.wheel}}class B{touches;constructor(){this.touches=new Map}setupCanvasEvents(e){const s={passive:!1,capture:!1};e.addEventListener("touchstart",n=>{this.#e(n,e),n.preventDefault()},s),e.addEventListener("touchmove",n=>{this.#e(n,e),n.preventDefault()},s),e.addEventListener("touchend",n=>{for(const i of Array.from(n.changedTouches))this.touches.delete(i.identifier);n.preventDefault()},s)}#e(e,s){for(const n of Array.from(e.changedTouches)){const i=s.getBoundingClientRect();this.touches.set(n.identifier,{x:n.clientX-i.left,y:n.clientY-i.top})}}getCount(){return this.touches.size}getPositions(){return Array.from(this.touches.values())}getPosition(e){return this.touches.get(e)||null}}class I{keyboard;mouse;gamepads;touches;constructor(){this.keyboard=new P,this.mouse=new F,this.gamepads=new M,this.touches=new B}setupCanvasEvents(e){this.mouse.setupCanvasEvents(e),this.touches.setupCanvasEvents(e)}update(){this.gamepads.update(),this.mouse.update()}}class ${gameEngine;constructor(){this.gameEngine=new z(new I,new H)}getGameEngine(){return this.gameEngine}}const O=()=>({gameState:"idle",playerChoice:null,computerChoice:null,result:null,countdown:0,choices:["rock","paper","scissors"],pulseSize:1,pulseDir:1}),K=o=>{if(!o.playerChoice||!o.computerChoice){o.result=null;return}if(o.playerChoice===o.computerChoice){o.result="draw";return}const e={rock:"scissors",paper:"rock",scissors:"paper"};o.result=e[o.playerChoice]===o.computerChoice?"win":"lose"},Z=o=>{o.computerChoice=o.choices[Math.floor(Math.random()*o.choices.length)]};class N{constructor(e){this.canvas=e,this.debug=!1}debug;handleClick(e,s){s.preventDefault(),this.handleInput(e,s.clientX,s.clientY)}handleTouch(e,s){s.preventDefault();const n=s.touches[0];this.handleInput(e,n.clientX,n.clientY)}handleInput(e,s,n){const i=this.canvas,a=i.getBoundingClientRect(),u=i.width/a.width,p=i.height/a.height,d=(s-a.left)*u,g=(n-a.top)*p,f=i.width/2,t=i.height/2,r=50;switch(this.debug&&console.log(`Click at: ${d}, ${g}`),e.gameState){case"idle":this.handleIdleState(e,d,g,f,t,r);break;case"player-choose":this.handlePlayerChooseState(e,d,g,f,t,r);break;case"result":e.countdown<=0&&this.handleResultState(e,d,g,f,t,r);break}}handleIdleState(e,s,n,i,a,u){const p=a+100,d=Math.hypot(s-i,n-p);this.debug&&console.log(`Idle state - Distance to button: ${d}`),d<u&&(e.gameState="player-choose")}handlePlayerChooseState(e,s,n,i,a,u){const p=a+50,d=100;e.choices.forEach((g,f)=>{const t=i+(f-1)*d,r=Math.hypot(s-t,n-p);this.debug&&console.log(`Choice ${f} - Distance: ${r}`),r<u&&(e.playerChoice=g,e.gameState="result",e.countdown=60,Z(e),K(e))})}handleResultState(e,s,n,i,a,u){const p=a+150,d=Math.hypot(s-i,n-p);this.debug&&console.log(`Result state - Distance to button: ${d}`),d<u&&this.resetGameState(e)}resetGameState(e){e.gameState="player-choose",e.playerChoice=null,e.computerChoice=null,e.result=null,e.countdown=0,e.pulseSize=1,e.pulseDir=1}}const U=()=>{const o=t=>`/pages/rock-paper-scissors/assets/${t}.png`,e={rock:new Image,paper:new Image,scissors:new Image},s={rock:!1,paper:!1,scissors:!1},n=t=>new Promise(r=>{e[t].src=o(t),e[t].onload=()=>{s[t]=!0,r()},e[t].onerror=()=>{console.error(`Failed to load sprite: ${t}`),r()}}),i=async()=>{await Promise.all([n("rock"),n("paper"),n("scissors")])},a=(t,r,c,l,h)=>{if(!r||!s[r]){u(t,r,c,l,h);return}t.save(),t.translate(c,l);const m=e[r].naturalWidth/e[r].naturalHeight,v=h,w=h/m;t.drawImage(e[r],-v/2,-w/2,v,w),t.restore()},u=(t,r,c,l,h)=>{t.save(),t.translate(c,l),t.beginPath(),t.arc(0,0,h/2,0,Math.PI*2),t.fillStyle="#cccccc",t.fill(),t.strokeStyle="#999999",t.stroke(),r&&(t.font=`${h/3}px Arial`,t.textAlign="center",t.textBaseline="middle",t.fillStyle="#333333",t.fillText(r.charAt(0).toUpperCase(),0,0)),t.restore()},p=(t,r,c,l)=>{t.font="bold 30px Arial",t.textAlign="center",t.fillStyle="#4cc9f0",t.fillText("Rock Paper Scissors",r,c),t.beginPath(),t.arc(r,c+100,50,0,Math.PI*2),t.fillStyle="#4CAF50",t.fill(),t.font="bold 20px Arial",t.fillStyle="white",t.fillText("START",r,c+105),t.save(),t.translate(r,c-100),t.scale(l.pulseSize,l.pulseSize),a(t,"rock",-50,0,60),a(t,"paper",0,0,60),a(t,"scissors",50,0,60),t.restore()},d=(t,r,c,l)=>{t.font="24px Arial",t.textAlign="center",t.fillStyle="#90e0ef",t.fillText("Choose your move:",r,c-80);const h=c+50,m=100;l.choices.forEach((v,w)=>{const y=r+(w-1)*m;a(t,v,y,h,80)})},g=(t,r,c,l)=>{if(l.playerChoice&&a(t,l.playerChoice,r-100,c,100),t.font="18px Arial",t.textAlign="center",t.fillStyle="#90e0ef",t.fillText("You",r-100,c+100),t.font="bold 24px Arial",t.fillStyle="#f72585",t.fillText("VS",r,c+30),l.countdown>0&&l.computerChoice){const h=1-l.countdown/60;t.save(),t.translate(r+100,c),t.scale(h,h),a(t,l.computerChoice,0,0,100),t.restore()}else if(l.computerChoice){a(t,l.computerChoice,r+100,c,100),t.fillText("Computer",r+100,c+100);let h="",m="";switch(l.result){case"win":h="You Win!",m="#4CAF50";break;case"lose":h="You Lose!",m="#F44336";break;case"draw":h="Draw!",m="#FFC107";break}h&&m&&(t.font="bold 30px Arial",t.fillStyle=m,t.fillText(h,r,c-120)),t.beginPath(),t.arc(r,c+170,50,0,Math.PI*2),t.fillStyle="#2196F3",t.fill(),t.font="bold 16px Arial",t.fillStyle="white",t.fillText("PLAY",r,c+175)}},f=(t,r,c)=>{const l=r.width/2,h=r.height/2;switch(c.gameState){case"idle":p(t,l,h,c);break;case"player-choose":d(t,l,h,c);break;case"result":g(t,l,h,c);break}};return i(),{renderGame:f}};class Y{constructor(e){this.canvas=e,this.state=O(),this.inputHandler=new N(this.canvas),this.renderer=U()}name="Rock Paper Scissors";displayName;state;inputHandler;renderer;clickHandler;touchHandler;init(){console.log("Initializing Rock Paper Scissors Scene")}onEnter(){this.state.gameState="idle",this.clickHandler=e=>this.inputHandler.handleClick(this.state,e),this.canvas.addEventListener("click",this.clickHandler,{passive:!1}),this.touchHandler=e=>this.inputHandler.handleTouch(this.state,e),this.canvas.addEventListener("touchstart",this.touchHandler,{passive:!1})}onExit(){this.clickHandler&&(this.canvas.removeEventListener("click",this.clickHandler),this.clickHandler=void 0),this.touchHandler&&(this.canvas.removeEventListener("touchstart",this.touchHandler),this.touchHandler=void 0)}update(e){const{deltaTime:s}=e;this.state.gameState==="result"&&this.state.countdown>0&&(this.state.countdown-=1),this.state.gameState==="idle"&&(this.state.pulseSize+=5e-4*s*this.state.pulseDir,this.state.pulseSize>1.2&&(this.state.pulseDir=-1),this.state.pulseSize<.8&&(this.state.pulseDir=1))}render(e){this.renderer.renderGame(e.ctx,this.canvas,this.state)}resize(){}}window.addEventListener("load",async()=>{const o=V();k("canvas-container","game-canvas",o);const{canvas:e}=q("game-canvas");o.registerScene("Rock Paper Scissors",new Y(e)),o.transitionToScene("Rock Paper Scissors")});function V(){return new $().getGameEngine()}function q(o){const e=document.getElementById(o);if(!e)throw new Error(`Canvas element with ID '${o}' not found`);if(!(e instanceof HTMLCanvasElement))throw new Error(`Element with ID '${o}' is not a canvas element`);return{canvas:e,width:e.width,height:e.height}}
